/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private Integer appId;
    private String  autoTune;
    private String  tunePrimaryTime;
    private String  tuneGroupConfig;
    private String  riskSwitch;
    private String  autoDispatch;
    private String  advancedSetup;
    private String  timeZone;
    private String  tuneTimeTag;
    private String  operateTime;

    public ConfigInfo() {}

    public ConfigInfo(ConfigInfo value) {
        this.id = value.id;
        this.appId = value.appId;
        this.autoTune = value.autoTune;
        this.tunePrimaryTime = value.tunePrimaryTime;
        this.tuneGroupConfig = value.tuneGroupConfig;
        this.riskSwitch = value.riskSwitch;
        this.autoDispatch = value.autoDispatch;
        this.advancedSetup = value.advancedSetup;
        this.timeZone = value.timeZone;
        this.tuneTimeTag = value.tuneTimeTag;
        this.operateTime = value.operateTime;
    }

    public ConfigInfo(
        Integer id,
        Integer appId,
        String  autoTune,
        String  tunePrimaryTime,
        String  tuneGroupConfig,
        String  riskSwitch,
        String  autoDispatch,
        String  advancedSetup,
        String  timeZone,
        String  tuneTimeTag,
        String  operateTime
    ) {
        this.id = id;
        this.appId = appId;
        this.autoTune = autoTune;
        this.tunePrimaryTime = tunePrimaryTime;
        this.tuneGroupConfig = tuneGroupConfig;
        this.riskSwitch = riskSwitch;
        this.autoDispatch = autoDispatch;
        this.advancedSetup = advancedSetup;
        this.timeZone = timeZone;
        this.tuneTimeTag = tuneTimeTag;
        this.operateTime = operateTime;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.ID</code>. 唯一ID;唯一ID
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.ID</code>. 唯一ID;唯一ID
     */
    public ConfigInfo setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.APP_ID</code>. 关联的集群id
     */
    public Integer getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.APP_ID</code>. 关联的集群id
     */
    public ConfigInfo setAppId(Integer appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.AUTO_TUNE</code>. 自动调优开关 。true：开启；false关闭
     */
    public String getAutoTune() {
        return this.autoTune;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.AUTO_TUNE</code>. 自动调优开关 。true：开启；false关闭
     */
    public ConfigInfo setAutoTune(String autoTune) {
        this.autoTune = autoTune;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.TUNE_PRIMARY_TIME</code>. 调节约束时间
     */
    public String getTunePrimaryTime() {
        return this.tunePrimaryTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.TUNE_PRIMARY_TIME</code>. 调节约束时间
     */
    public ConfigInfo setTunePrimaryTime(String tunePrimaryTime) {
        this.tunePrimaryTime = tunePrimaryTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.TUNE_GROUP_CONFIG</code>. 调节分组配置
     */
    public String getTuneGroupConfig() {
        return this.tuneGroupConfig;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.TUNE_GROUP_CONFIG</code>. 调节分组配置
     */
    public ConfigInfo setTuneGroupConfig(String tuneGroupConfig) {
        this.tuneGroupConfig = tuneGroupConfig;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.RISK_SWITCH</code>. 智能防控开关。true:打开；false:关闭
     */
    public String getRiskSwitch() {
        return this.riskSwitch;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.RISK_SWITCH</code>. 智能防控开关。true:打开；false:关闭
     */
    public ConfigInfo setRiskSwitch(String riskSwitch) {
        this.riskSwitch = riskSwitch;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.AUTO_DISPATCH</code>. 托管标识。true：开启；false关闭。
     */
    public String getAutoDispatch() {
        return this.autoDispatch;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.AUTO_DISPATCH</code>. 托管标识。true：开启；false关闭。
     */
    public ConfigInfo setAutoDispatch(String autoDispatch) {
        this.autoDispatch = autoDispatch;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.ADVANCED_SETUP</code>. 高级设置：每批次条调参完成，会对这些配置进行检查
     */
    public String getAdvancedSetup() {
        return this.advancedSetup;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.ADVANCED_SETUP</code>. 高级设置：每批次条调参完成，会对这些配置进行检查
     */
    public ConfigInfo setAdvancedSetup(String advancedSetup) {
        this.advancedSetup = advancedSetup;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.TIME_ZONE</code>. 时区
     */
    public String getTimeZone() {
        return this.timeZone;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.TIME_ZONE</code>. 时区
     */
    public ConfigInfo setTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.TUNE_TIME_TAG</code>. 调节时间标识。true代表可调有时间。false代表不可调有时间。与TUNE_PRIMARY_TIME结合使用
     */
    public String getTuneTimeTag() {
        return this.tuneTimeTag;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.TUNE_TIME_TAG</code>. 调节时间标识。true代表可调有时间。false代表不可调有时间。与TUNE_PRIMARY_TIME结合使用
     */
    public ConfigInfo setTuneTimeTag(String tuneTimeTag) {
        this.tuneTimeTag = tuneTimeTag;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.CONFIG_INFO.OPERATE_TIME</code>. 操作时间
     */
    public String getOperateTime() {
        return this.operateTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.CONFIG_INFO.OPERATE_TIME</code>. 操作时间
     */
    public ConfigInfo setOperateTime(String operateTime) {
        this.operateTime = operateTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ConfigInfo (");

        sb.append(id);
        sb.append(", ").append(appId);
        sb.append(", ").append(autoTune);
        sb.append(", ").append(tunePrimaryTime);
        sb.append(", ").append(tuneGroupConfig);
        sb.append(", ").append(riskSwitch);
        sb.append(", ").append(autoDispatch);
        sb.append(", ").append(advancedSetup);
        sb.append(", ").append(timeZone);
        sb.append(", ").append(tuneTimeTag);
        sb.append(", ").append(operateTime);

        sb.append(")");
        return sb.toString();
    }
}
