/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TunePoolInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       id;
    private String        accessToken;
    private Integer       appId;
    private Integer       pipelineId;
    private String        appName;
    private LocalDateTime createdTime;
    private LocalDateTime updatedTime;
    private String        updatedBy;
    private String        experimentPoolStatus;
    private String        batchPoolStatus;
    private String        experimentPoolConfig;
    private String        batchPoolConfig;

    public TunePoolInfo() {}

    public TunePoolInfo(TunePoolInfo value) {
        this.id = value.id;
        this.accessToken = value.accessToken;
        this.appId = value.appId;
        this.pipelineId = value.pipelineId;
        this.appName = value.appName;
        this.createdTime = value.createdTime;
        this.updatedTime = value.updatedTime;
        this.updatedBy = value.updatedBy;
        this.experimentPoolStatus = value.experimentPoolStatus;
        this.batchPoolStatus = value.batchPoolStatus;
        this.experimentPoolConfig = value.experimentPoolConfig;
        this.batchPoolConfig = value.batchPoolConfig;
    }

    public TunePoolInfo(
        Integer       id,
        String        accessToken,
        Integer       appId,
        Integer       pipelineId,
        String        appName,
        LocalDateTime createdTime,
        LocalDateTime updatedTime,
        String        updatedBy,
        String        experimentPoolStatus,
        String        batchPoolStatus,
        String        experimentPoolConfig,
        String        batchPoolConfig
    ) {
        this.id = id;
        this.accessToken = accessToken;
        this.appId = appId;
        this.pipelineId = pipelineId;
        this.appName = appName;
        this.createdTime = createdTime;
        this.updatedTime = updatedTime;
        this.updatedBy = updatedBy;
        this.experimentPoolStatus = experimentPoolStatus;
        this.batchPoolStatus = batchPoolStatus;
        this.experimentPoolConfig = experimentPoolConfig;
        this.batchPoolConfig = batchPoolConfig;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.ID</code>. 主键ID
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.ID</code>. 主键ID
     */
    public TunePoolInfo setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public String getAccessToken() {
        return this.accessToken;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public TunePoolInfo setAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.APP_ID</code>. 应用ID
     */
    public Integer getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.APP_ID</code>. 应用ID
     */
    public TunePoolInfo setAppId(Integer appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.PIPELINE_ID</code>. 关联的流程ID
     */
    public Integer getPipelineId() {
        return this.pipelineId;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.PIPELINE_ID</code>. 关联的流程ID
     */
    public TunePoolInfo setPipelineId(Integer pipelineId) {
        this.pipelineId = pipelineId;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.APP_NAME</code>. 应用名
     */
    public String getAppName() {
        return this.appName;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.APP_NAME</code>. 应用名
     */
    public TunePoolInfo setAppName(String appName) {
        this.appName = appName;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return this.createdTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.CREATED_TIME</code>. 创建时间
     */
    public TunePoolInfo setCreatedTime(LocalDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.UPDATED_TIME</code>. 更新时间
     */
    public LocalDateTime getUpdatedTime() {
        return this.updatedTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.UPDATED_TIME</code>. 更新时间
     */
    public TunePoolInfo setUpdatedTime(LocalDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.UPDATED_BY</code>. 更新人
     */
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.UPDATED_BY</code>. 更新人
     */
    public TunePoolInfo setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.EXPERIMENT_POOL_STATUS</code>. 实验池状态
     */
    public String getExperimentPoolStatus() {
        return this.experimentPoolStatus;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.EXPERIMENT_POOL_STATUS</code>. 实验池状态
     */
    public TunePoolInfo setExperimentPoolStatus(String experimentPoolStatus) {
        this.experimentPoolStatus = experimentPoolStatus;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.BATCH_POOL_STATUS</code>. 调参池状态
     */
    public String getBatchPoolStatus() {
        return this.batchPoolStatus;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.BATCH_POOL_STATUS</code>. 调参池状态
     */
    public TunePoolInfo setBatchPoolStatus(String batchPoolStatus) {
        this.batchPoolStatus = batchPoolStatus;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.EXPERIMENT_POOL_CONFIG</code>. 实验池配置
     */
    public String getExperimentPoolConfig() {
        return this.experimentPoolConfig;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.EXPERIMENT_POOL_CONFIG</code>. 实验池配置
     */
    public TunePoolInfo setExperimentPoolConfig(String experimentPoolConfig) {
        this.experimentPoolConfig = experimentPoolConfig;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.BATCH_POOL_CONFIG</code>. 调参池配置
     */
    public String getBatchPoolConfig() {
        return this.batchPoolConfig;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_POOL_INFO.BATCH_POOL_CONFIG</code>. 调参池配置
     */
    public TunePoolInfo setBatchPoolConfig(String batchPoolConfig) {
        this.batchPoolConfig = batchPoolConfig;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TunePoolInfo (");

        sb.append(id);
        sb.append(", ").append(accessToken);
        sb.append(", ").append(appId);
        sb.append(", ").append(pipelineId);
        sb.append(", ").append(appName);
        sb.append(", ").append(createdTime);
        sb.append(", ").append(updatedTime);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(experimentPoolStatus);
        sb.append(", ").append(batchPoolStatus);
        sb.append(", ").append(experimentPoolConfig);
        sb.append(", ").append(batchPoolConfig);

        sb.append(")");
        return sb.toString();
    }
}
