/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.TunePipeline;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TunePipelineRecord extends UpdatableRecordImpl<TunePipelineRecord> implements Record13<Integer, Integer, String, Integer, LocalDateTime, LocalDateTime, String, String, Integer, Integer, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.ID</code>. 主键
     */
    public TunePipelineRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.ID</code>. 主键
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.PIPELINE_ID</code>. 流程id
     */
    public TunePipelineRecord setPipelineId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.PIPELINE_ID</code>. 流程id
     */
    public Integer getPipelineId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.ACCESS_TOKEN</code>. 关联的token
     */
    public TunePipelineRecord setAccessToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.ACCESS_TOKEN</code>. 关联的token
     */
    public String getAccessToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.APP_ID</code>. 应用ID
     */
    public TunePipelineRecord setAppId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.APP_ID</code>. 应用ID
     */
    public Integer getAppId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.CREATED_TIME</code>. 创建时间
     */
    public TunePipelineRecord setCreatedTime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.UPDATED_TIME</code>. 更新时间
     */
    public TunePipelineRecord setUpdatedTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.UPDATED_TIME</code>. 更新时间
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.STATUS</code>. 当前状态
     */
    public TunePipelineRecord setStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.STATUS</code>. 当前状态
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.STAGE</code>. 当前阶段
     */
    public TunePipelineRecord setStage(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.STAGE</code>. 当前阶段
     */
    public String getStage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.PRE_PHASE_ID</code>. 前一阶段id
     */
    public TunePipelineRecord setPrePhaseId(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.PRE_PHASE_ID</code>. 前一阶段id
     */
    public Integer getPrePhaseId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.CURRENT_PHASE_ID</code>. 当前阶段id
     */
    public TunePipelineRecord setCurrentPhaseId(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.CURRENT_PHASE_ID</code>. 当前阶段id
     */
    public Integer getCurrentPhaseId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.MACHINE_ID</code>. 状态机id
     */
    public TunePipelineRecord setMachineId(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.MACHINE_ID</code>. 状态机id
     */
    public String getMachineId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.TUNE_PLAN_ID</code>. 对应的计划id
     */
    public TunePipelineRecord setTunePlanId(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.TUNE_PLAN_ID</code>. 对应的计划id
     */
    public Integer getTunePlanId() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE.TYPE</code>.
     */
    public TunePipelineRecord setType(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE.TYPE</code>.
     */
    public String getType() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, String, Integer, LocalDateTime, LocalDateTime, String, String, Integer, Integer, String, Integer, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, Integer, String, Integer, LocalDateTime, LocalDateTime, String, String, Integer, Integer, String, Integer, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TunePipeline.TUNE_PIPELINE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TunePipeline.TUNE_PIPELINE.PIPELINE_ID;
    }

    @Override
    public Field<String> field3() {
        return TunePipeline.TUNE_PIPELINE.ACCESS_TOKEN;
    }

    @Override
    public Field<Integer> field4() {
        return TunePipeline.TUNE_PIPELINE.APP_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TunePipeline.TUNE_PIPELINE.CREATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TunePipeline.TUNE_PIPELINE.UPDATED_TIME;
    }

    @Override
    public Field<String> field7() {
        return TunePipeline.TUNE_PIPELINE.STATUS;
    }

    @Override
    public Field<String> field8() {
        return TunePipeline.TUNE_PIPELINE.STAGE;
    }

    @Override
    public Field<Integer> field9() {
        return TunePipeline.TUNE_PIPELINE.PRE_PHASE_ID;
    }

    @Override
    public Field<Integer> field10() {
        return TunePipeline.TUNE_PIPELINE.CURRENT_PHASE_ID;
    }

    @Override
    public Field<String> field11() {
        return TunePipeline.TUNE_PIPELINE.MACHINE_ID;
    }

    @Override
    public Field<Integer> field12() {
        return TunePipeline.TUNE_PIPELINE.TUNE_PLAN_ID;
    }

    @Override
    public Field<String> field13() {
        return TunePipeline.TUNE_PIPELINE.TYPE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPipelineId();
    }

    @Override
    public String component3() {
        return getAccessToken();
    }

    @Override
    public Integer component4() {
        return getAppId();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedTime();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public String component8() {
        return getStage();
    }

    @Override
    public Integer component9() {
        return getPrePhaseId();
    }

    @Override
    public Integer component10() {
        return getCurrentPhaseId();
    }

    @Override
    public String component11() {
        return getMachineId();
    }

    @Override
    public Integer component12() {
        return getTunePlanId();
    }

    @Override
    public String component13() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPipelineId();
    }

    @Override
    public String value3() {
        return getAccessToken();
    }

    @Override
    public Integer value4() {
        return getAppId();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedTime();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public String value8() {
        return getStage();
    }

    @Override
    public Integer value9() {
        return getPrePhaseId();
    }

    @Override
    public Integer value10() {
        return getCurrentPhaseId();
    }

    @Override
    public String value11() {
        return getMachineId();
    }

    @Override
    public Integer value12() {
        return getTunePlanId();
    }

    @Override
    public String value13() {
        return getType();
    }

    @Override
    public TunePipelineRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value2(Integer value) {
        setPipelineId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value3(String value) {
        setAccessToken(value);
        return this;
    }

    @Override
    public TunePipelineRecord value4(Integer value) {
        setAppId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value5(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public TunePipelineRecord value6(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public TunePipelineRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TunePipelineRecord value8(String value) {
        setStage(value);
        return this;
    }

    @Override
    public TunePipelineRecord value9(Integer value) {
        setPrePhaseId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value10(Integer value) {
        setCurrentPhaseId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value11(String value) {
        setMachineId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value12(Integer value) {
        setTunePlanId(value);
        return this;
    }

    @Override
    public TunePipelineRecord value13(String value) {
        setType(value);
        return this;
    }

    @Override
    public TunePipelineRecord values(Integer value1, Integer value2, String value3, Integer value4, LocalDateTime value5, LocalDateTime value6, String value7, String value8, Integer value9, Integer value10, String value11, Integer value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TunePipelineRecord
     */
    public TunePipelineRecord() {
        super(TunePipeline.TUNE_PIPELINE);
    }

    /**
     * Create a detached, initialised TunePipelineRecord
     */
    public TunePipelineRecord(Integer id, Integer pipelineId, String accessToken, Integer appId, LocalDateTime createdTime, LocalDateTime updatedTime, String status, String stage, Integer prePhaseId, Integer currentPhaseId, String machineId, Integer tunePlanId, String type) {
        super(TunePipeline.TUNE_PIPELINE);

        setId(id);
        setPipelineId(pipelineId);
        setAccessToken(accessToken);
        setAppId(appId);
        setCreatedTime(createdTime);
        setUpdatedTime(updatedTime);
        setStatus(status);
        setStage(stage);
        setPrePhaseId(prePhaseId);
        setCurrentPhaseId(currentPhaseId);
        setMachineId(machineId);
        setTunePlanId(tunePlanId);
        setType(type);
    }
}
