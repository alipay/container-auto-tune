/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.TuneLogInfo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TuneLogInfoRecord extends UpdatableRecordImpl<TuneLogInfoRecord> implements Record15<Integer, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime, String, String, String, Integer, String, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ID</code>. 主键
     */
    public TuneLogInfoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ID</code>. 主键
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.PIPELINE_ID</code>. 流程id
     */
    public TuneLogInfoRecord setPipelineId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.PIPELINE_ID</code>. 流程id
     */
    public Integer getPipelineId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.APP_ID</code>. 应用id
     */
    public TuneLogInfoRecord setAppId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.APP_ID</code>. 应用id
     */
    public Integer getAppId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.JVM_MARKET_ID</code>. 参数id
     */
    public TuneLogInfoRecord setJvmMarketId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.JVM_MARKET_ID</code>. 参数id
     */
    public Integer getJvmMarketId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ACTION</code>. 执行动作
     */
    public TuneLogInfoRecord setAction(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ACTION</code>. 执行动作
     */
    public String getAction() {
        return (String) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.CREATED_TIME</code>. 创建时间
     */
    public TuneLogInfoRecord setCreatedTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.CHANGET_TIME</code>. 更新时间
     */
    public TuneLogInfoRecord setChangetTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.CHANGET_TIME</code>. 更新时间
     */
    public LocalDateTime getChangetTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.CHANGE_POD_NAME</code>. 改变的单机
     */
    public TuneLogInfoRecord setChangePodName(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.CHANGE_POD_NAME</code>. 改变的单机
     */
    public String getChangePodName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ACTION_DESC</code>. 描述
     */
    public TuneLogInfoRecord setActionDesc(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ACTION_DESC</code>. 描述
     */
    public String getActionDesc() {
        return (String) get(8);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ERROR_MSG</code>. 异常描述
     */
    public TuneLogInfoRecord setErrorMsg(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.ERROR_MSG</code>. 异常描述
     */
    public String getErrorMsg() {
        return (String) get(9);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_TOTAL_NUM</code>. 分批总机器数
     */
    public TuneLogInfoRecord setBatchTotalNum(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_TOTAL_NUM</code>. 分批总机器数
     */
    public Integer getBatchTotalNum() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_PODS</code>. 分批机器变更详情
     */
    public TuneLogInfoRecord setBatchPods(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_PODS</code>. 分批机器变更详情
     */
    public String getBatchPods() {
        return (String) get(11);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_RATIO</code>. 分批比例
     */
    public TuneLogInfoRecord setBatchRatio(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_RATIO</code>. 分批比例
     */
    public Integer getBatchRatio() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_NO</code>. 当前分批批次
     */
    public TuneLogInfoRecord setBatchNo(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.BATCH_NO</code>. 当前分批批次
     */
    public Integer getBatchNo() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.RISK_TRACE_ID</code>. 风险识别ID
     */
    public TuneLogInfoRecord setRiskTraceId(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_LOG_INFO.RISK_TRACE_ID</code>. 风险识别ID
     */
    public String getRiskTraceId() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime, String, String, String, Integer, String, Integer, Integer, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Integer, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime, String, String, String, Integer, String, Integer, Integer, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TuneLogInfo.TUNE_LOG_INFO.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TuneLogInfo.TUNE_LOG_INFO.PIPELINE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return TuneLogInfo.TUNE_LOG_INFO.APP_ID;
    }

    @Override
    public Field<Integer> field4() {
        return TuneLogInfo.TUNE_LOG_INFO.JVM_MARKET_ID;
    }

    @Override
    public Field<String> field5() {
        return TuneLogInfo.TUNE_LOG_INFO.ACTION;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TuneLogInfo.TUNE_LOG_INFO.CREATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TuneLogInfo.TUNE_LOG_INFO.CHANGET_TIME;
    }

    @Override
    public Field<String> field8() {
        return TuneLogInfo.TUNE_LOG_INFO.CHANGE_POD_NAME;
    }

    @Override
    public Field<String> field9() {
        return TuneLogInfo.TUNE_LOG_INFO.ACTION_DESC;
    }

    @Override
    public Field<String> field10() {
        return TuneLogInfo.TUNE_LOG_INFO.ERROR_MSG;
    }

    @Override
    public Field<Integer> field11() {
        return TuneLogInfo.TUNE_LOG_INFO.BATCH_TOTAL_NUM;
    }

    @Override
    public Field<String> field12() {
        return TuneLogInfo.TUNE_LOG_INFO.BATCH_PODS;
    }

    @Override
    public Field<Integer> field13() {
        return TuneLogInfo.TUNE_LOG_INFO.BATCH_RATIO;
    }

    @Override
    public Field<Integer> field14() {
        return TuneLogInfo.TUNE_LOG_INFO.BATCH_NO;
    }

    @Override
    public Field<String> field15() {
        return TuneLogInfo.TUNE_LOG_INFO.RISK_TRACE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPipelineId();
    }

    @Override
    public Integer component3() {
        return getAppId();
    }

    @Override
    public Integer component4() {
        return getJvmMarketId();
    }

    @Override
    public String component5() {
        return getAction();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime component7() {
        return getChangetTime();
    }

    @Override
    public String component8() {
        return getChangePodName();
    }

    @Override
    public String component9() {
        return getActionDesc();
    }

    @Override
    public String component10() {
        return getErrorMsg();
    }

    @Override
    public Integer component11() {
        return getBatchTotalNum();
    }

    @Override
    public String component12() {
        return getBatchPods();
    }

    @Override
    public Integer component13() {
        return getBatchRatio();
    }

    @Override
    public Integer component14() {
        return getBatchNo();
    }

    @Override
    public String component15() {
        return getRiskTraceId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPipelineId();
    }

    @Override
    public Integer value3() {
        return getAppId();
    }

    @Override
    public Integer value4() {
        return getJvmMarketId();
    }

    @Override
    public String value5() {
        return getAction();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime value7() {
        return getChangetTime();
    }

    @Override
    public String value8() {
        return getChangePodName();
    }

    @Override
    public String value9() {
        return getActionDesc();
    }

    @Override
    public String value10() {
        return getErrorMsg();
    }

    @Override
    public Integer value11() {
        return getBatchTotalNum();
    }

    @Override
    public String value12() {
        return getBatchPods();
    }

    @Override
    public Integer value13() {
        return getBatchRatio();
    }

    @Override
    public Integer value14() {
        return getBatchNo();
    }

    @Override
    public String value15() {
        return getRiskTraceId();
    }

    @Override
    public TuneLogInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value2(Integer value) {
        setPipelineId(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value3(Integer value) {
        setAppId(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value4(Integer value) {
        setJvmMarketId(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value5(String value) {
        setAction(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value6(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value7(LocalDateTime value) {
        setChangetTime(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value8(String value) {
        setChangePodName(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value9(String value) {
        setActionDesc(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value10(String value) {
        setErrorMsg(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value11(Integer value) {
        setBatchTotalNum(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value12(String value) {
        setBatchPods(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value13(Integer value) {
        setBatchRatio(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value14(Integer value) {
        setBatchNo(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord value15(String value) {
        setRiskTraceId(value);
        return this;
    }

    @Override
    public TuneLogInfoRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, LocalDateTime value6, LocalDateTime value7, String value8, String value9, String value10, Integer value11, String value12, Integer value13, Integer value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TuneLogInfoRecord
     */
    public TuneLogInfoRecord() {
        super(TuneLogInfo.TUNE_LOG_INFO);
    }

    /**
     * Create a detached, initialised TuneLogInfoRecord
     */
    public TuneLogInfoRecord(Integer id, Integer pipelineId, Integer appId, Integer jvmMarketId, String action, LocalDateTime createdTime, LocalDateTime changetTime, String changePodName, String actionDesc, String errorMsg, Integer batchTotalNum, String batchPods, Integer batchRatio, Integer batchNo, String riskTraceId) {
        super(TuneLogInfo.TUNE_LOG_INFO);

        setId(id);
        setPipelineId(pipelineId);
        setAppId(appId);
        setJvmMarketId(jvmMarketId);
        setAction(action);
        setCreatedTime(createdTime);
        setChangetTime(changetTime);
        setChangePodName(changePodName);
        setActionDesc(actionDesc);
        setErrorMsg(errorMsg);
        setBatchTotalNum(batchTotalNum);
        setBatchPods(batchPods);
        setBatchRatio(batchRatio);
        setBatchNo(batchNo);
        setRiskTraceId(riskTraceId);
    }
}
