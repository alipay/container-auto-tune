/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.TunePipelinePhase;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TunePipelinePhaseRecord extends UpdatableRecordImpl<TunePipelinePhaseRecord> implements Record7<Integer, String, Integer, Integer, LocalDateTime, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.ID</code>. 主键
     */
    public TunePipelinePhaseRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.ID</code>. 主键
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.STAGE</code>. 阶段
     */
    public TunePipelinePhaseRecord setStage(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.STAGE</code>. 阶段
     */
    public String getStage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.PIPELINE_ID</code>. pipeline id
     */
    public TunePipelinePhaseRecord setPipelineId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.PIPELINE_ID</code>. pipeline id
     */
    public Integer getPipelineId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.PIPELINE_BRANCH_ID</code>. tune_pipeline主键id
     */
    public TunePipelinePhaseRecord setPipelineBranchId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.PIPELINE_BRANCH_ID</code>. tune_pipeline主键id
     */
    public Integer getPipelineBranchId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.UPDATED_TIME</code>. 更新时间
     */
    public TunePipelinePhaseRecord setUpdatedTime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.UPDATED_TIME</code>. 更新时间
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.CREATED_TIME</code>. 创建时间
     */
    public TunePipelinePhaseRecord setCreatedTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.CONTEXT</code>. 上下文
     */
    public TunePipelinePhaseRecord setContext(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TUNE_PIPELINE_PHASE.CONTEXT</code>. 上下文
     */
    public String getContext() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, Integer, Integer, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, Integer, Integer, LocalDateTime, LocalDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.ID;
    }

    @Override
    public Field<String> field2() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.STAGE;
    }

    @Override
    public Field<Integer> field3() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.PIPELINE_ID;
    }

    @Override
    public Field<Integer> field4() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.PIPELINE_BRANCH_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.UPDATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.CREATED_TIME;
    }

    @Override
    public Field<String> field7() {
        return TunePipelinePhase.TUNE_PIPELINE_PHASE.CONTEXT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getStage();
    }

    @Override
    public Integer component3() {
        return getPipelineId();
    }

    @Override
    public Integer component4() {
        return getPipelineBranchId();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedTime();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedTime();
    }

    @Override
    public String component7() {
        return getContext();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getStage();
    }

    @Override
    public Integer value3() {
        return getPipelineId();
    }

    @Override
    public Integer value4() {
        return getPipelineBranchId();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedTime();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedTime();
    }

    @Override
    public String value7() {
        return getContext();
    }

    @Override
    public TunePipelinePhaseRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord value2(String value) {
        setStage(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord value3(Integer value) {
        setPipelineId(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord value4(Integer value) {
        setPipelineBranchId(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord value5(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord value6(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord value7(String value) {
        setContext(value);
        return this;
    }

    @Override
    public TunePipelinePhaseRecord values(Integer value1, String value2, Integer value3, Integer value4, LocalDateTime value5, LocalDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TunePipelinePhaseRecord
     */
    public TunePipelinePhaseRecord() {
        super(TunePipelinePhase.TUNE_PIPELINE_PHASE);
    }

    /**
     * Create a detached, initialised TunePipelinePhaseRecord
     */
    public TunePipelinePhaseRecord(Integer id, String stage, Integer pipelineId, Integer pipelineBranchId, LocalDateTime updatedTime, LocalDateTime createdTime, String context) {
        super(TunePipelinePhase.TUNE_PIPELINE_PHASE);

        setId(id);
        setStage(stage);
        setPipelineId(pipelineId);
        setPipelineBranchId(pipelineBranchId);
        setUpdatedTime(updatedTime);
        setCreatedTime(createdTime);
        setContext(context);
    }
}
