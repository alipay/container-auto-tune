/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.MeterMetaInfo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeterMetaInfoRecord extends UpdatableRecordImpl<MeterMetaInfoRecord> implements Record8<Integer, LocalDateTime, LocalDateTime, String, String, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.ID</code>. 唯一ID;唯一ID
     */
    public MeterMetaInfoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.ID</code>. 唯一ID;唯一ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.CREATED_TIME</code>.
     */
    public MeterMetaInfoRecord setCreatedTime(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.CREATED_TIME</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.MODIFIED_TIME</code>.
     */
    public MeterMetaInfoRecord setModifiedTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.MODIFIED_TIME</code>.
     */
    public LocalDateTime getModifiedTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.METER_NAME</code>. 注册的监控名称
     */
    public MeterMetaInfoRecord setMeterName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.METER_NAME</code>. 注册的监控名称
     */
    public String getMeterName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.METER_DOMAIN</code>. 注册监控的domain
     */
    public MeterMetaInfoRecord setMeterDomain(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.METER_DOMAIN</code>. 注册监控的domain
     */
    public String getMeterDomain() {
        return (String) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.METER_METRICS</code>. 监控指标信息
     */
    public MeterMetaInfoRecord setMeterMetrics(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.METER_METRICS</code>. 监控指标信息
     */
    public String getMeterMetrics() {
        return (String) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.METER_ENABLE</code>.
     */
    public MeterMetaInfoRecord setMeterEnable(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.METER_ENABLE</code>.
     */
    public String getMeterEnable() {
        return (String) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.METER_META_INFO.APP_ID</code>.
     */
    public MeterMetaInfoRecord setAppId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.METER_META_INFO.APP_ID</code>.
     */
    public Integer getAppId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, String, String, String, String, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, LocalDateTime, LocalDateTime, String, String, String, String, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MeterMetaInfo.METER_META_INFO.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return MeterMetaInfo.METER_META_INFO.CREATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return MeterMetaInfo.METER_META_INFO.MODIFIED_TIME;
    }

    @Override
    public Field<String> field4() {
        return MeterMetaInfo.METER_META_INFO.METER_NAME;
    }

    @Override
    public Field<String> field5() {
        return MeterMetaInfo.METER_META_INFO.METER_DOMAIN;
    }

    @Override
    public Field<String> field6() {
        return MeterMetaInfo.METER_META_INFO.METER_METRICS;
    }

    @Override
    public Field<String> field7() {
        return MeterMetaInfo.METER_META_INFO.METER_ENABLE;
    }

    @Override
    public Field<Integer> field8() {
        return MeterMetaInfo.METER_META_INFO.APP_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime component3() {
        return getModifiedTime();
    }

    @Override
    public String component4() {
        return getMeterName();
    }

    @Override
    public String component5() {
        return getMeterDomain();
    }

    @Override
    public String component6() {
        return getMeterMetrics();
    }

    @Override
    public String component7() {
        return getMeterEnable();
    }

    @Override
    public Integer component8() {
        return getAppId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime value3() {
        return getModifiedTime();
    }

    @Override
    public String value4() {
        return getMeterName();
    }

    @Override
    public String value5() {
        return getMeterDomain();
    }

    @Override
    public String value6() {
        return getMeterMetrics();
    }

    @Override
    public String value7() {
        return getMeterEnable();
    }

    @Override
    public Integer value8() {
        return getAppId();
    }

    @Override
    public MeterMetaInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value2(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value3(LocalDateTime value) {
        setModifiedTime(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value4(String value) {
        setMeterName(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value5(String value) {
        setMeterDomain(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value6(String value) {
        setMeterMetrics(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value7(String value) {
        setMeterEnable(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord value8(Integer value) {
        setAppId(value);
        return this;
    }

    @Override
    public MeterMetaInfoRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, String value4, String value5, String value6, String value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeterMetaInfoRecord
     */
    public MeterMetaInfoRecord() {
        super(MeterMetaInfo.METER_META_INFO);
    }

    /**
     * Create a detached, initialised MeterMetaInfoRecord
     */
    public MeterMetaInfoRecord(Integer id, LocalDateTime createdTime, LocalDateTime modifiedTime, String meterName, String meterDomain, String meterMetrics, String meterEnable, Integer appId) {
        super(MeterMetaInfo.METER_META_INFO);

        setId(id);
        setCreatedTime(createdTime);
        setModifiedTime(modifiedTime);
        setMeterName(meterName);
        setMeterDomain(meterDomain);
        setMeterMetrics(meterMetrics);
        setMeterEnable(meterEnable);
        setAppId(appId);
    }
}
