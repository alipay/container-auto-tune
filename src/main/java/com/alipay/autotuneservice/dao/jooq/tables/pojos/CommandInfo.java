/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommandInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private String        sessionid;
    private String        runleAction;
    private String        resultType;
    private String        result;
    private String        accessToken;
    private String        appName;
    private String        unionCode;
    private String        context;
    private String        status;
    private LocalDateTime createdTime;
    private LocalDateTime updatedTime;
    private String        taskName;
    private String        podName;

    public CommandInfo() {}

    public CommandInfo(CommandInfo value) {
        this.id = value.id;
        this.sessionid = value.sessionid;
        this.runleAction = value.runleAction;
        this.resultType = value.resultType;
        this.result = value.result;
        this.accessToken = value.accessToken;
        this.appName = value.appName;
        this.unionCode = value.unionCode;
        this.context = value.context;
        this.status = value.status;
        this.createdTime = value.createdTime;
        this.updatedTime = value.updatedTime;
        this.taskName = value.taskName;
        this.podName = value.podName;
    }

    public CommandInfo(
        Long          id,
        String        sessionid,
        String        runleAction,
        String        resultType,
        String        result,
        String        accessToken,
        String        appName,
        String        unionCode,
        String        context,
        String        status,
        LocalDateTime createdTime,
        LocalDateTime updatedTime,
        String        taskName,
        String        podName
    ) {
        this.id = id;
        this.sessionid = sessionid;
        this.runleAction = runleAction;
        this.resultType = resultType;
        this.result = result;
        this.accessToken = accessToken;
        this.appName = appName;
        this.unionCode = unionCode;
        this.context = context;
        this.status = status;
        this.createdTime = createdTime;
        this.updatedTime = updatedTime;
        this.taskName = taskName;
        this.podName = podName;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.ID</code>. 主键
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.ID</code>. 主键
     */
    public CommandInfo setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.SESSIONID</code>. 会话ID
     */
    public String getSessionid() {
        return this.sessionid;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.SESSIONID</code>. 会话ID
     */
    public CommandInfo setSessionid(String sessionid) {
        this.sessionid = sessionid;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.RUNLE_ACTION</code>. 执行类型
     */
    public String getRunleAction() {
        return this.runleAction;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.RUNLE_ACTION</code>. 执行类型
     */
    public CommandInfo setRunleAction(String runleAction) {
        this.runleAction = runleAction;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.RESULT_TYPE</code>. 结果类型
     */
    public String getResultType() {
        return this.resultType;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.RESULT_TYPE</code>. 结果类型
     */
    public CommandInfo setResultType(String resultType) {
        this.resultType = resultType;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.RESULT</code>. 结果
     */
    public String getResult() {
        return this.result;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.RESULT</code>. 结果
     */
    public CommandInfo setResult(String result) {
        this.result = result;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public String getAccessToken() {
        return this.accessToken;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public CommandInfo setAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.APP_NAME</code>. 应用名
     */
    public String getAppName() {
        return this.appName;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.APP_NAME</code>. 应用名
     */
    public CommandInfo setAppName(String appName) {
        this.appName = appName;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.UNION_CODE</code>. 每个VM启动后,自动生成唯一标识,用来进行唯一关联
     */
    public String getUnionCode() {
        return this.unionCode;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.UNION_CODE</code>. 每个VM启动后,自动生成唯一标识,用来进行唯一关联
     */
    public CommandInfo setUnionCode(String unionCode) {
        this.unionCode = unionCode;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.CONTEXT</code>. 执行上下文
     */
    public String getContext() {
        return this.context;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.CONTEXT</code>. 执行上下文
     */
    public CommandInfo setContext(String context) {
        this.context = context;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.STATUS</code>. 执行状态
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.STATUS</code>. 执行状态
     */
    public CommandInfo setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return this.createdTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.CREATED_TIME</code>. 创建时间
     */
    public CommandInfo setCreatedTime(LocalDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.UPDATED_TIME</code>. 更新时间
     */
    public LocalDateTime getUpdatedTime() {
        return this.updatedTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.UPDATED_TIME</code>. 更新时间
     */
    public CommandInfo setUpdatedTime(LocalDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.TASK_NAME</code>.
     */
    public String getTaskName() {
        return this.taskName;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.TASK_NAME</code>.
     */
    public CommandInfo setTaskName(String taskName) {
        this.taskName = taskName;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.COMMAND_INFO.POD_NAME</code>.
     */
    public String getPodName() {
        return this.podName;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.COMMAND_INFO.POD_NAME</code>.
     */
    public CommandInfo setPodName(String podName) {
        this.podName = podName;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CommandInfo (");

        sb.append(id);
        sb.append(", ").append(sessionid);
        sb.append(", ").append(runleAction);
        sb.append(", ").append(resultType);
        sb.append(", ").append(result);
        sb.append(", ").append(accessToken);
        sb.append(", ").append(appName);
        sb.append(", ").append(unionCode);
        sb.append(", ").append(context);
        sb.append(", ").append(status);
        sb.append(", ").append(createdTime);
        sb.append(", ").append(updatedTime);
        sb.append(", ").append(taskName);
        sb.append(", ").append(podName);

        sb.append(")");
        return sb.toString();
    }
}
