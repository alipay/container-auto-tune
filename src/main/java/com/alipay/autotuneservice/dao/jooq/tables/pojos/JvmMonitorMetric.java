/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JvmMonitorMetric implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private Long    cpucount;
    private Double  systemcpuload;
    private Double  processcpuload;
    private Double  waitcpuload;
    private Double  cpuload;
    private String  cluster;
    private Long    period;
    private String  pod;
    private Long    dt;
    private Integer appid;
    private String  app;
    private Double  edenUsed;
    private Double  edenMax;
    private Double  edenCapacity;
    private Double  edenUtil;
    private Double  oldUsed;
    private Double  oldMax;
    private Double  oldCapacity;
    private Double  oldUtil;
    private Double  metaUtil;
    private Double  metaUsed;
    private Double  metaMax;
    private Double  metaCapacity;
    private Double  jvmMemUtil;
    private Double  jvmMemUsed;
    private Double  jvmMemMax;
    private Double  jvmMemCapacity;
    private Double  systemMemUtil;
    private Double  systemMemUsed;
    private Double  systemMemMax;
    private Double  systemMemCapacity;
    private Long    ygcCount;
    private Double  ygcTime;
    private Long    fgcCount;
    private Double  fgcTime;
    private Double  s0c;
    private Double  s1c;
    private Double  s0u;
    private Double  s1u;
    private Double  ec;
    private Double  eu;
    private Double  oc;
    private Double  ou;
    private Double  mc;
    private Double  mu;
    private Double  ccsc;
    private Double  ccsu;
    private Integer ygc;
    private Double  ygct;
    private Integer fgc;
    private Double  fgct;
    private Double  gct;
    private Double  ngcmn;
    private Double  ngcmx;
    private Double  ngc;
    private Double  ogcmn;
    private Double  ogcmx;
    private Double  ogc;
    private Double  mcmn;
    private Double  mcmx;
    private Double  ccsmn;
    private Double  ccsmx;
    private Long    codecacheused;
    private Long    codecachemax;
    private Double  codecacheutil;
    private Long    safepointcount;
    private Long    safepointtime;
    private Long    threadcount;
    private Long    peakthreadcount;
    private Long    daemonthreadcount;
    private Long    deadlockedcount;
    private Long    totalloadedclasscount;
    private Long    loadedclasscount;
    private Long    unloadedclasscount;
    private Long    jvmjittime;

    public JvmMonitorMetric() {}

    public JvmMonitorMetric(JvmMonitorMetric value) {
        this.id = value.id;
        this.cpucount = value.cpucount;
        this.systemcpuload = value.systemcpuload;
        this.processcpuload = value.processcpuload;
        this.waitcpuload = value.waitcpuload;
        this.cpuload = value.cpuload;
        this.cluster = value.cluster;
        this.period = value.period;
        this.pod = value.pod;
        this.dt = value.dt;
        this.appid = value.appid;
        this.app = value.app;
        this.edenUsed = value.edenUsed;
        this.edenMax = value.edenMax;
        this.edenCapacity = value.edenCapacity;
        this.edenUtil = value.edenUtil;
        this.oldUsed = value.oldUsed;
        this.oldMax = value.oldMax;
        this.oldCapacity = value.oldCapacity;
        this.oldUtil = value.oldUtil;
        this.metaUtil = value.metaUtil;
        this.metaUsed = value.metaUsed;
        this.metaMax = value.metaMax;
        this.metaCapacity = value.metaCapacity;
        this.jvmMemUtil = value.jvmMemUtil;
        this.jvmMemUsed = value.jvmMemUsed;
        this.jvmMemMax = value.jvmMemMax;
        this.jvmMemCapacity = value.jvmMemCapacity;
        this.systemMemUtil = value.systemMemUtil;
        this.systemMemUsed = value.systemMemUsed;
        this.systemMemMax = value.systemMemMax;
        this.systemMemCapacity = value.systemMemCapacity;
        this.ygcCount = value.ygcCount;
        this.ygcTime = value.ygcTime;
        this.fgcCount = value.fgcCount;
        this.fgcTime = value.fgcTime;
        this.s0c = value.s0c;
        this.s1c = value.s1c;
        this.s0u = value.s0u;
        this.s1u = value.s1u;
        this.ec = value.ec;
        this.eu = value.eu;
        this.oc = value.oc;
        this.ou = value.ou;
        this.mc = value.mc;
        this.mu = value.mu;
        this.ccsc = value.ccsc;
        this.ccsu = value.ccsu;
        this.ygc = value.ygc;
        this.ygct = value.ygct;
        this.fgc = value.fgc;
        this.fgct = value.fgct;
        this.gct = value.gct;
        this.ngcmn = value.ngcmn;
        this.ngcmx = value.ngcmx;
        this.ngc = value.ngc;
        this.ogcmn = value.ogcmn;
        this.ogcmx = value.ogcmx;
        this.ogc = value.ogc;
        this.mcmn = value.mcmn;
        this.mcmx = value.mcmx;
        this.ccsmn = value.ccsmn;
        this.ccsmx = value.ccsmx;
        this.codecacheused = value.codecacheused;
        this.codecachemax = value.codecachemax;
        this.codecacheutil = value.codecacheutil;
        this.safepointcount = value.safepointcount;
        this.safepointtime = value.safepointtime;
        this.threadcount = value.threadcount;
        this.peakthreadcount = value.peakthreadcount;
        this.daemonthreadcount = value.daemonthreadcount;
        this.deadlockedcount = value.deadlockedcount;
        this.totalloadedclasscount = value.totalloadedclasscount;
        this.loadedclasscount = value.loadedclasscount;
        this.unloadedclasscount = value.unloadedclasscount;
        this.jvmjittime = value.jvmjittime;
    }

    public JvmMonitorMetric(
        Integer id,
        Long    cpucount,
        Double  systemcpuload,
        Double  processcpuload,
        Double  waitcpuload,
        Double  cpuload,
        String  cluster,
        Long    period,
        String  pod,
        Long    dt,
        Integer appid,
        String  app,
        Double  edenUsed,
        Double  edenMax,
        Double  edenCapacity,
        Double  edenUtil,
        Double  oldUsed,
        Double  oldMax,
        Double  oldCapacity,
        Double  oldUtil,
        Double  metaUtil,
        Double  metaUsed,
        Double  metaMax,
        Double  metaCapacity,
        Double  jvmMemUtil,
        Double  jvmMemUsed,
        Double  jvmMemMax,
        Double  jvmMemCapacity,
        Double  systemMemUtil,
        Double  systemMemUsed,
        Double  systemMemMax,
        Double  systemMemCapacity,
        Long    ygcCount,
        Double  ygcTime,
        Long    fgcCount,
        Double  fgcTime,
        Double  s0c,
        Double  s1c,
        Double  s0u,
        Double  s1u,
        Double  ec,
        Double  eu,
        Double  oc,
        Double  ou,
        Double  mc,
        Double  mu,
        Double  ccsc,
        Double  ccsu,
        Integer ygc,
        Double  ygct,
        Integer fgc,
        Double  fgct,
        Double  gct,
        Double  ngcmn,
        Double  ngcmx,
        Double  ngc,
        Double  ogcmn,
        Double  ogcmx,
        Double  ogc,
        Double  mcmn,
        Double  mcmx,
        Double  ccsmn,
        Double  ccsmx,
        Long    codecacheused,
        Long    codecachemax,
        Double  codecacheutil,
        Long    safepointcount,
        Long    safepointtime,
        Long    threadcount,
        Long    peakthreadcount,
        Long    daemonthreadcount,
        Long    deadlockedcount,
        Long    totalloadedclasscount,
        Long    loadedclasscount,
        Long    unloadedclasscount,
        Long    jvmjittime
    ) {
        this.id = id;
        this.cpucount = cpucount;
        this.systemcpuload = systemcpuload;
        this.processcpuload = processcpuload;
        this.waitcpuload = waitcpuload;
        this.cpuload = cpuload;
        this.cluster = cluster;
        this.period = period;
        this.pod = pod;
        this.dt = dt;
        this.appid = appid;
        this.app = app;
        this.edenUsed = edenUsed;
        this.edenMax = edenMax;
        this.edenCapacity = edenCapacity;
        this.edenUtil = edenUtil;
        this.oldUsed = oldUsed;
        this.oldMax = oldMax;
        this.oldCapacity = oldCapacity;
        this.oldUtil = oldUtil;
        this.metaUtil = metaUtil;
        this.metaUsed = metaUsed;
        this.metaMax = metaMax;
        this.metaCapacity = metaCapacity;
        this.jvmMemUtil = jvmMemUtil;
        this.jvmMemUsed = jvmMemUsed;
        this.jvmMemMax = jvmMemMax;
        this.jvmMemCapacity = jvmMemCapacity;
        this.systemMemUtil = systemMemUtil;
        this.systemMemUsed = systemMemUsed;
        this.systemMemMax = systemMemMax;
        this.systemMemCapacity = systemMemCapacity;
        this.ygcCount = ygcCount;
        this.ygcTime = ygcTime;
        this.fgcCount = fgcCount;
        this.fgcTime = fgcTime;
        this.s0c = s0c;
        this.s1c = s1c;
        this.s0u = s0u;
        this.s1u = s1u;
        this.ec = ec;
        this.eu = eu;
        this.oc = oc;
        this.ou = ou;
        this.mc = mc;
        this.mu = mu;
        this.ccsc = ccsc;
        this.ccsu = ccsu;
        this.ygc = ygc;
        this.ygct = ygct;
        this.fgc = fgc;
        this.fgct = fgct;
        this.gct = gct;
        this.ngcmn = ngcmn;
        this.ngcmx = ngcmx;
        this.ngc = ngc;
        this.ogcmn = ogcmn;
        this.ogcmx = ogcmx;
        this.ogc = ogc;
        this.mcmn = mcmn;
        this.mcmx = mcmx;
        this.ccsmn = ccsmn;
        this.ccsmx = ccsmx;
        this.codecacheused = codecacheused;
        this.codecachemax = codecachemax;
        this.codecacheutil = codecacheutil;
        this.safepointcount = safepointcount;
        this.safepointtime = safepointtime;
        this.threadcount = threadcount;
        this.peakthreadcount = peakthreadcount;
        this.daemonthreadcount = daemonthreadcount;
        this.deadlockedcount = deadlockedcount;
        this.totalloadedclasscount = totalloadedclasscount;
        this.loadedclasscount = loadedclasscount;
        this.unloadedclasscount = unloadedclasscount;
        this.jvmjittime = jvmjittime;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.ID</code>. 唯一ID;唯一ID
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.ID</code>. 唯一ID;唯一ID
     */
    public JvmMonitorMetric setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CPUCOUNT</code>.
     */
    public Long getCpucount() {
        return this.cpucount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CPUCOUNT</code>.
     */
    public JvmMonitorMetric setCpucount(Long cpucount) {
        this.cpucount = cpucount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEMCPULOAD</code>.
     */
    public Double getSystemcpuload() {
        return this.systemcpuload;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEMCPULOAD</code>.
     */
    public JvmMonitorMetric setSystemcpuload(Double systemcpuload) {
        this.systemcpuload = systemcpuload;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.PROCESSCPULOAD</code>.
     */
    public Double getProcesscpuload() {
        return this.processcpuload;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.PROCESSCPULOAD</code>.
     */
    public JvmMonitorMetric setProcesscpuload(Double processcpuload) {
        this.processcpuload = processcpuload;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.WAITCPULOAD</code>.
     */
    public Double getWaitcpuload() {
        return this.waitcpuload;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.WAITCPULOAD</code>.
     */
    public JvmMonitorMetric setWaitcpuload(Double waitcpuload) {
        this.waitcpuload = waitcpuload;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CPULOAD</code>.
     */
    public Double getCpuload() {
        return this.cpuload;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CPULOAD</code>.
     */
    public JvmMonitorMetric setCpuload(Double cpuload) {
        this.cpuload = cpuload;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CLUSTER</code>.
     */
    public String getCluster() {
        return this.cluster;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CLUSTER</code>.
     */
    public JvmMonitorMetric setCluster(String cluster) {
        this.cluster = cluster;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.PERIOD</code>.
     */
    public Long getPeriod() {
        return this.period;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.PERIOD</code>.
     */
    public JvmMonitorMetric setPeriod(Long period) {
        this.period = period;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.POD</code>.
     */
    public String getPod() {
        return this.pod;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.POD</code>.
     */
    public JvmMonitorMetric setPod(String pod) {
        this.pod = pod;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.DT</code>. 分区
     */
    public Long getDt() {
        return this.dt;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.DT</code>. 分区
     */
    public JvmMonitorMetric setDt(Long dt) {
        this.dt = dt;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.APPID</code>.
     */
    public Integer getAppid() {
        return this.appid;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.APPID</code>.
     */
    public JvmMonitorMetric setAppid(Integer appid) {
        this.appid = appid;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.APP</code>.
     */
    public String getApp() {
        return this.app;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.APP</code>.
     */
    public JvmMonitorMetric setApp(String app) {
        this.app = app;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_USED</code>.
     */
    public Double getEdenUsed() {
        return this.edenUsed;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_USED</code>.
     */
    public JvmMonitorMetric setEdenUsed(Double edenUsed) {
        this.edenUsed = edenUsed;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_MAX</code>.
     */
    public Double getEdenMax() {
        return this.edenMax;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_MAX</code>.
     */
    public JvmMonitorMetric setEdenMax(Double edenMax) {
        this.edenMax = edenMax;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_CAPACITY</code>.
     */
    public Double getEdenCapacity() {
        return this.edenCapacity;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_CAPACITY</code>.
     */
    public JvmMonitorMetric setEdenCapacity(Double edenCapacity) {
        this.edenCapacity = edenCapacity;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_UTIL</code>.
     */
    public Double getEdenUtil() {
        return this.edenUtil;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EDEN_UTIL</code>.
     */
    public JvmMonitorMetric setEdenUtil(Double edenUtil) {
        this.edenUtil = edenUtil;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_USED</code>.
     */
    public Double getOldUsed() {
        return this.oldUsed;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_USED</code>.
     */
    public JvmMonitorMetric setOldUsed(Double oldUsed) {
        this.oldUsed = oldUsed;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_MAX</code>.
     */
    public Double getOldMax() {
        return this.oldMax;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_MAX</code>.
     */
    public JvmMonitorMetric setOldMax(Double oldMax) {
        this.oldMax = oldMax;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_CAPACITY</code>.
     */
    public Double getOldCapacity() {
        return this.oldCapacity;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_CAPACITY</code>.
     */
    public JvmMonitorMetric setOldCapacity(Double oldCapacity) {
        this.oldCapacity = oldCapacity;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_UTIL</code>.
     */
    public Double getOldUtil() {
        return this.oldUtil;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OLD_UTIL</code>.
     */
    public JvmMonitorMetric setOldUtil(Double oldUtil) {
        this.oldUtil = oldUtil;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_UTIL</code>.
     */
    public Double getMetaUtil() {
        return this.metaUtil;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_UTIL</code>.
     */
    public JvmMonitorMetric setMetaUtil(Double metaUtil) {
        this.metaUtil = metaUtil;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_USED</code>.
     */
    public Double getMetaUsed() {
        return this.metaUsed;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_USED</code>.
     */
    public JvmMonitorMetric setMetaUsed(Double metaUsed) {
        this.metaUsed = metaUsed;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_MAX</code>.
     */
    public Double getMetaMax() {
        return this.metaMax;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_MAX</code>.
     */
    public JvmMonitorMetric setMetaMax(Double metaMax) {
        this.metaMax = metaMax;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_CAPACITY</code>.
     */
    public Double getMetaCapacity() {
        return this.metaCapacity;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.META_CAPACITY</code>.
     */
    public JvmMonitorMetric setMetaCapacity(Double metaCapacity) {
        this.metaCapacity = metaCapacity;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_UTIL</code>.
     */
    public Double getJvmMemUtil() {
        return this.jvmMemUtil;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_UTIL</code>.
     */
    public JvmMonitorMetric setJvmMemUtil(Double jvmMemUtil) {
        this.jvmMemUtil = jvmMemUtil;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_USED</code>.
     */
    public Double getJvmMemUsed() {
        return this.jvmMemUsed;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_USED</code>.
     */
    public JvmMonitorMetric setJvmMemUsed(Double jvmMemUsed) {
        this.jvmMemUsed = jvmMemUsed;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_MAX</code>.
     */
    public Double getJvmMemMax() {
        return this.jvmMemMax;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_MAX</code>.
     */
    public JvmMonitorMetric setJvmMemMax(Double jvmMemMax) {
        this.jvmMemMax = jvmMemMax;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_CAPACITY</code>.
     */
    public Double getJvmMemCapacity() {
        return this.jvmMemCapacity;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVM_MEM_CAPACITY</code>.
     */
    public JvmMonitorMetric setJvmMemCapacity(Double jvmMemCapacity) {
        this.jvmMemCapacity = jvmMemCapacity;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_UTIL</code>.
     */
    public Double getSystemMemUtil() {
        return this.systemMemUtil;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_UTIL</code>.
     */
    public JvmMonitorMetric setSystemMemUtil(Double systemMemUtil) {
        this.systemMemUtil = systemMemUtil;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_USED</code>.
     */
    public Double getSystemMemUsed() {
        return this.systemMemUsed;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_USED</code>.
     */
    public JvmMonitorMetric setSystemMemUsed(Double systemMemUsed) {
        this.systemMemUsed = systemMemUsed;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_MAX</code>.
     */
    public Double getSystemMemMax() {
        return this.systemMemMax;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_MAX</code>.
     */
    public JvmMonitorMetric setSystemMemMax(Double systemMemMax) {
        this.systemMemMax = systemMemMax;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_CAPACITY</code>.
     */
    public Double getSystemMemCapacity() {
        return this.systemMemCapacity;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SYSTEM_MEM_CAPACITY</code>.
     */
    public JvmMonitorMetric setSystemMemCapacity(Double systemMemCapacity) {
        this.systemMemCapacity = systemMemCapacity;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGC_COUNT</code>.
     */
    public Long getYgcCount() {
        return this.ygcCount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGC_COUNT</code>.
     */
    public JvmMonitorMetric setYgcCount(Long ygcCount) {
        this.ygcCount = ygcCount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGC_TIME</code>.
     */
    public Double getYgcTime() {
        return this.ygcTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGC_TIME</code>.
     */
    public JvmMonitorMetric setYgcTime(Double ygcTime) {
        this.ygcTime = ygcTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGC_COUNT</code>.
     */
    public Long getFgcCount() {
        return this.fgcCount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGC_COUNT</code>.
     */
    public JvmMonitorMetric setFgcCount(Long fgcCount) {
        this.fgcCount = fgcCount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGC_TIME</code>.
     */
    public Double getFgcTime() {
        return this.fgcTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGC_TIME</code>.
     */
    public JvmMonitorMetric setFgcTime(Double fgcTime) {
        this.fgcTime = fgcTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S0C</code>.
     */
    public Double getS0c() {
        return this.s0c;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S0C</code>.
     */
    public JvmMonitorMetric setS0c(Double s0c) {
        this.s0c = s0c;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S1C</code>.
     */
    public Double getS1c() {
        return this.s1c;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S1C</code>.
     */
    public JvmMonitorMetric setS1c(Double s1c) {
        this.s1c = s1c;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S0U</code>.
     */
    public Double getS0u() {
        return this.s0u;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S0U</code>.
     */
    public JvmMonitorMetric setS0u(Double s0u) {
        this.s0u = s0u;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S1U</code>.
     */
    public Double getS1u() {
        return this.s1u;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.S1U</code>.
     */
    public JvmMonitorMetric setS1u(Double s1u) {
        this.s1u = s1u;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EC</code>.
     */
    public Double getEc() {
        return this.ec;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EC</code>.
     */
    public JvmMonitorMetric setEc(Double ec) {
        this.ec = ec;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EU</code>.
     */
    public Double getEu() {
        return this.eu;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.EU</code>.
     */
    public JvmMonitorMetric setEu(Double eu) {
        this.eu = eu;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OC</code>.
     */
    public Double getOc() {
        return this.oc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OC</code>.
     */
    public JvmMonitorMetric setOc(Double oc) {
        this.oc = oc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OU</code>.
     */
    public Double getOu() {
        return this.ou;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OU</code>.
     */
    public JvmMonitorMetric setOu(Double ou) {
        this.ou = ou;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MC</code>.
     */
    public Double getMc() {
        return this.mc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MC</code>.
     */
    public JvmMonitorMetric setMc(Double mc) {
        this.mc = mc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MU</code>.
     */
    public Double getMu() {
        return this.mu;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MU</code>.
     */
    public JvmMonitorMetric setMu(Double mu) {
        this.mu = mu;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSC</code>.
     */
    public Double getCcsc() {
        return this.ccsc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSC</code>.
     */
    public JvmMonitorMetric setCcsc(Double ccsc) {
        this.ccsc = ccsc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSU</code>.
     */
    public Double getCcsu() {
        return this.ccsu;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSU</code>.
     */
    public JvmMonitorMetric setCcsu(Double ccsu) {
        this.ccsu = ccsu;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGC</code>.
     */
    public Integer getYgc() {
        return this.ygc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGC</code>.
     */
    public JvmMonitorMetric setYgc(Integer ygc) {
        this.ygc = ygc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGCT</code>.
     */
    public Double getYgct() {
        return this.ygct;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.YGCT</code>.
     */
    public JvmMonitorMetric setYgct(Double ygct) {
        this.ygct = ygct;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGC</code>.
     */
    public Integer getFgc() {
        return this.fgc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGC</code>.
     */
    public JvmMonitorMetric setFgc(Integer fgc) {
        this.fgc = fgc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGCT</code>.
     */
    public Double getFgct() {
        return this.fgct;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.FGCT</code>.
     */
    public JvmMonitorMetric setFgct(Double fgct) {
        this.fgct = fgct;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.GCT</code>.
     */
    public Double getGct() {
        return this.gct;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.GCT</code>.
     */
    public JvmMonitorMetric setGct(Double gct) {
        this.gct = gct;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.NGCMN</code>.
     */
    public Double getNgcmn() {
        return this.ngcmn;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.NGCMN</code>.
     */
    public JvmMonitorMetric setNgcmn(Double ngcmn) {
        this.ngcmn = ngcmn;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.NGCMX</code>.
     */
    public Double getNgcmx() {
        return this.ngcmx;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.NGCMX</code>.
     */
    public JvmMonitorMetric setNgcmx(Double ngcmx) {
        this.ngcmx = ngcmx;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.NGC</code>.
     */
    public Double getNgc() {
        return this.ngc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.NGC</code>.
     */
    public JvmMonitorMetric setNgc(Double ngc) {
        this.ngc = ngc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OGCMN</code>.
     */
    public Double getOgcmn() {
        return this.ogcmn;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OGCMN</code>.
     */
    public JvmMonitorMetric setOgcmn(Double ogcmn) {
        this.ogcmn = ogcmn;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OGCMX</code>.
     */
    public Double getOgcmx() {
        return this.ogcmx;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OGCMX</code>.
     */
    public JvmMonitorMetric setOgcmx(Double ogcmx) {
        this.ogcmx = ogcmx;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OGC</code>.
     */
    public Double getOgc() {
        return this.ogc;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.OGC</code>.
     */
    public JvmMonitorMetric setOgc(Double ogc) {
        this.ogc = ogc;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MCMN</code>.
     */
    public Double getMcmn() {
        return this.mcmn;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MCMN</code>.
     */
    public JvmMonitorMetric setMcmn(Double mcmn) {
        this.mcmn = mcmn;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MCMX</code>.
     */
    public Double getMcmx() {
        return this.mcmx;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.MCMX</code>.
     */
    public JvmMonitorMetric setMcmx(Double mcmx) {
        this.mcmx = mcmx;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSMN</code>.
     */
    public Double getCcsmn() {
        return this.ccsmn;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSMN</code>.
     */
    public JvmMonitorMetric setCcsmn(Double ccsmn) {
        this.ccsmn = ccsmn;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSMX</code>.
     */
    public Double getCcsmx() {
        return this.ccsmx;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CCSMX</code>.
     */
    public JvmMonitorMetric setCcsmx(Double ccsmx) {
        this.ccsmx = ccsmx;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CODECACHEUSED</code>.
     */
    public Long getCodecacheused() {
        return this.codecacheused;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CODECACHEUSED</code>.
     */
    public JvmMonitorMetric setCodecacheused(Long codecacheused) {
        this.codecacheused = codecacheused;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CODECACHEMAX</code>.
     */
    public Long getCodecachemax() {
        return this.codecachemax;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CODECACHEMAX</code>.
     */
    public JvmMonitorMetric setCodecachemax(Long codecachemax) {
        this.codecachemax = codecachemax;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CODECACHEUTIL</code>.
     */
    public Double getCodecacheutil() {
        return this.codecacheutil;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.CODECACHEUTIL</code>.
     */
    public JvmMonitorMetric setCodecacheutil(Double codecacheutil) {
        this.codecacheutil = codecacheutil;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SAFEPOINTCOUNT</code>.
     */
    public Long getSafepointcount() {
        return this.safepointcount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SAFEPOINTCOUNT</code>.
     */
    public JvmMonitorMetric setSafepointcount(Long safepointcount) {
        this.safepointcount = safepointcount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SAFEPOINTTIME</code>.
     */
    public Long getSafepointtime() {
        return this.safepointtime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.SAFEPOINTTIME</code>.
     */
    public JvmMonitorMetric setSafepointtime(Long safepointtime) {
        this.safepointtime = safepointtime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.THREADCOUNT</code>.
     */
    public Long getThreadcount() {
        return this.threadcount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.THREADCOUNT</code>.
     */
    public JvmMonitorMetric setThreadcount(Long threadcount) {
        this.threadcount = threadcount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.PEAKTHREADCOUNT</code>.
     */
    public Long getPeakthreadcount() {
        return this.peakthreadcount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.PEAKTHREADCOUNT</code>.
     */
    public JvmMonitorMetric setPeakthreadcount(Long peakthreadcount) {
        this.peakthreadcount = peakthreadcount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.DAEMONTHREADCOUNT</code>.
     */
    public Long getDaemonthreadcount() {
        return this.daemonthreadcount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.DAEMONTHREADCOUNT</code>.
     */
    public JvmMonitorMetric setDaemonthreadcount(Long daemonthreadcount) {
        this.daemonthreadcount = daemonthreadcount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.DEADLOCKEDCOUNT</code>.
     */
    public Long getDeadlockedcount() {
        return this.deadlockedcount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.DEADLOCKEDCOUNT</code>.
     */
    public JvmMonitorMetric setDeadlockedcount(Long deadlockedcount) {
        this.deadlockedcount = deadlockedcount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.TOTALLOADEDCLASSCOUNT</code>.
     */
    public Long getTotalloadedclasscount() {
        return this.totalloadedclasscount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.TOTALLOADEDCLASSCOUNT</code>.
     */
    public JvmMonitorMetric setTotalloadedclasscount(Long totalloadedclasscount) {
        this.totalloadedclasscount = totalloadedclasscount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.LOADEDCLASSCOUNT</code>.
     */
    public Long getLoadedclasscount() {
        return this.loadedclasscount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.LOADEDCLASSCOUNT</code>.
     */
    public JvmMonitorMetric setLoadedclasscount(Long loadedclasscount) {
        this.loadedclasscount = loadedclasscount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.UNLOADEDCLASSCOUNT</code>.
     */
    public Long getUnloadedclasscount() {
        return this.unloadedclasscount;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.UNLOADEDCLASSCOUNT</code>.
     */
    public JvmMonitorMetric setUnloadedclasscount(Long unloadedclasscount) {
        this.unloadedclasscount = unloadedclasscount;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVMJITTIME</code>.
     */
    public Long getJvmjittime() {
        return this.jvmjittime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_MONITOR_METRIC.JVMJITTIME</code>.
     */
    public JvmMonitorMetric setJvmjittime(Long jvmjittime) {
        this.jvmjittime = jvmjittime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JvmMonitorMetric (");

        sb.append(id);
        sb.append(", ").append(cpucount);
        sb.append(", ").append(systemcpuload);
        sb.append(", ").append(processcpuload);
        sb.append(", ").append(waitcpuload);
        sb.append(", ").append(cpuload);
        sb.append(", ").append(cluster);
        sb.append(", ").append(period);
        sb.append(", ").append(pod);
        sb.append(", ").append(dt);
        sb.append(", ").append(appid);
        sb.append(", ").append(app);
        sb.append(", ").append(edenUsed);
        sb.append(", ").append(edenMax);
        sb.append(", ").append(edenCapacity);
        sb.append(", ").append(edenUtil);
        sb.append(", ").append(oldUsed);
        sb.append(", ").append(oldMax);
        sb.append(", ").append(oldCapacity);
        sb.append(", ").append(oldUtil);
        sb.append(", ").append(metaUtil);
        sb.append(", ").append(metaUsed);
        sb.append(", ").append(metaMax);
        sb.append(", ").append(metaCapacity);
        sb.append(", ").append(jvmMemUtil);
        sb.append(", ").append(jvmMemUsed);
        sb.append(", ").append(jvmMemMax);
        sb.append(", ").append(jvmMemCapacity);
        sb.append(", ").append(systemMemUtil);
        sb.append(", ").append(systemMemUsed);
        sb.append(", ").append(systemMemMax);
        sb.append(", ").append(systemMemCapacity);
        sb.append(", ").append(ygcCount);
        sb.append(", ").append(ygcTime);
        sb.append(", ").append(fgcCount);
        sb.append(", ").append(fgcTime);
        sb.append(", ").append(s0c);
        sb.append(", ").append(s1c);
        sb.append(", ").append(s0u);
        sb.append(", ").append(s1u);
        sb.append(", ").append(ec);
        sb.append(", ").append(eu);
        sb.append(", ").append(oc);
        sb.append(", ").append(ou);
        sb.append(", ").append(mc);
        sb.append(", ").append(mu);
        sb.append(", ").append(ccsc);
        sb.append(", ").append(ccsu);
        sb.append(", ").append(ygc);
        sb.append(", ").append(ygct);
        sb.append(", ").append(fgc);
        sb.append(", ").append(fgct);
        sb.append(", ").append(gct);
        sb.append(", ").append(ngcmn);
        sb.append(", ").append(ngcmx);
        sb.append(", ").append(ngc);
        sb.append(", ").append(ogcmn);
        sb.append(", ").append(ogcmx);
        sb.append(", ").append(ogc);
        sb.append(", ").append(mcmn);
        sb.append(", ").append(mcmx);
        sb.append(", ").append(ccsmn);
        sb.append(", ").append(ccsmx);
        sb.append(", ").append(codecacheused);
        sb.append(", ").append(codecachemax);
        sb.append(", ").append(codecacheutil);
        sb.append(", ").append(safepointcount);
        sb.append(", ").append(safepointtime);
        sb.append(", ").append(threadcount);
        sb.append(", ").append(peakthreadcount);
        sb.append(", ").append(daemonthreadcount);
        sb.append(", ").append(deadlockedcount);
        sb.append(", ").append(totalloadedclasscount);
        sb.append(", ").append(loadedclasscount);
        sb.append(", ").append(unloadedclasscount);
        sb.append(", ").append(jvmjittime);

        sb.append(")");
        return sb.toString();
    }
}
