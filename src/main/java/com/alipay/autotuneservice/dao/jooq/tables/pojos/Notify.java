/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notify implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       id;
    private String        groupName;
    private String        status;
    private String        createBy;
    private LocalDateTime createdTime;
    private LocalDateTime updatedTime;
    private String        context;
    private String        accessToken;

    public Notify() {}

    public Notify(Notify value) {
        this.id = value.id;
        this.groupName = value.groupName;
        this.status = value.status;
        this.createBy = value.createBy;
        this.createdTime = value.createdTime;
        this.updatedTime = value.updatedTime;
        this.context = value.context;
        this.accessToken = value.accessToken;
    }

    public Notify(
        Integer       id,
        String        groupName,
        String        status,
        String        createBy,
        LocalDateTime createdTime,
        LocalDateTime updatedTime,
        String        context,
        String        accessToken
    ) {
        this.id = id;
        this.groupName = groupName;
        this.status = status;
        this.createBy = createBy;
        this.createdTime = createdTime;
        this.updatedTime = updatedTime;
        this.context = context;
        this.accessToken = accessToken;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.ID</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.ID</code>.
     */
    public Notify setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.GROUP_NAME</code>.
     */
    public String getGroupName() {
        return this.groupName;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.GROUP_NAME</code>.
     */
    public Notify setGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.STATUS</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.STATUS</code>.
     */
    public Notify setStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.CREATE_BY</code>.
     */
    public String getCreateBy() {
        return this.createBy;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.CREATE_BY</code>.
     */
    public Notify setCreateBy(String createBy) {
        this.createBy = createBy;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.CREATED_TIME</code>.
     */
    public LocalDateTime getCreatedTime() {
        return this.createdTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.CREATED_TIME</code>.
     */
    public Notify setCreatedTime(LocalDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.UPDATED_TIME</code>.
     */
    public LocalDateTime getUpdatedTime() {
        return this.updatedTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.UPDATED_TIME</code>.
     */
    public Notify setUpdatedTime(LocalDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.CONTEXT</code>.
     */
    public String getContext() {
        return this.context;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.CONTEXT</code>.
     */
    public Notify setContext(String context) {
        this.context = context;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.NOTIFY.ACCESS_TOKEN</code>.
     */
    public String getAccessToken() {
        return this.accessToken;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.NOTIFY.ACCESS_TOKEN</code>.
     */
    public Notify setAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Notify (");

        sb.append(id);
        sb.append(", ").append(groupName);
        sb.append(", ").append(status);
        sb.append(", ").append(createBy);
        sb.append(", ").append(createdTime);
        sb.append(", ").append(updatedTime);
        sb.append(", ").append(context);
        sb.append(", ").append(accessToken);

        sb.append(")");
        return sb.toString();
    }
}
