/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.TaskPipelineInfo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskPipelineInfoRecord extends UpdatableRecordImpl<TaskPipelineInfoRecord> implements Record14<Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime, Integer, Integer, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.ID</code>. 主键ID
     */
    public TaskPipelineInfoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.ID</code>. 主键ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public TaskPipelineInfoRecord setAccessToken(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public String getAccessToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_CLUSTER_ID</code>. 执行集群ID
     */
    public TaskPipelineInfoRecord setExecuteClusterId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_CLUSTER_ID</code>. 执行集群ID
     */
    public String getExecuteClusterId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_NODE_ID</code>. 执行单机ID
     */
    public TaskPipelineInfoRecord setExecuteNodeId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_NODE_ID</code>. 执行单机ID
     */
    public String getExecuteNodeId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.REPORT_TYPE</code>. 报告类型;报告类型：线程、内存、GC、ALL、TUNE
     */
    public TaskPipelineInfoRecord setReportType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.REPORT_TYPE</code>. 报告类型;报告类型：线程、内存、GC、ALL、TUNE
     */
    public String getReportType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_TYPE</code>. 执行类型;执行类型：人工、定时、阈值、upload
     */
    public TaskPipelineInfoRecord setExecuteType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_TYPE</code>. 执行类型;执行类型：人工、定时、阈值、upload
     */
    public String getExecuteType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_PARAM</code>. 执行参数
     */
    public TaskPipelineInfoRecord setExecuteParam(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_PARAM</code>. 执行参数
     */
    public String getExecuteParam() {
        return (String) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_FUTURE_TIME</code>. 期望执行时间
     */
    public TaskPipelineInfoRecord setExecuteFutureTime(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_FUTURE_TIME</code>. 期望执行时间
     */
    public LocalDateTime getExecuteFutureTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_TIME</code>. 实际执行时间
     */
    public TaskPipelineInfoRecord setExecuteTime(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.EXECUTE_TIME</code>. 实际执行时间
     */
    public LocalDateTime getExecuteTime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.RULE_IDS</code>. 关联的规则id;[]
     */
    public TaskPipelineInfoRecord setRuleIds(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.RULE_IDS</code>. 关联的规则id;[]
     */
    public Integer getRuleIds() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.REPORT_ID</code>. 关联的报告id
     */
    public TaskPipelineInfoRecord setReportId(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.REPORT_ID</code>. 关联的报告id
     */
    public Integer getReportId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.CREATED_BY</code>. 创建人
     */
    public TaskPipelineInfoRecord setCreatedBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.CREATED_BY</code>. 创建人
     */
    public String getCreatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.CREATED_TIME</code>. 创建时间
     */
    public TaskPipelineInfoRecord setCreatedTime(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.STATUS</code>. 状态;准备--&gt;运行(采集日志、分析日志)---&gt;结束
     */
    public TaskPipelineInfoRecord setStatus(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.TASK_PIPELINE_INFO.STATUS</code>. 状态;准备--&gt;运行(采集日志、分析日志)---&gt;结束
     */
    public String getStatus() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime, Integer, Integer, String, LocalDateTime, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime, Integer, Integer, String, LocalDateTime, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.ID;
    }

    @Override
    public Field<String> field2() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.ACCESS_TOKEN;
    }

    @Override
    public Field<String> field3() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.EXECUTE_CLUSTER_ID;
    }

    @Override
    public Field<String> field4() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.EXECUTE_NODE_ID;
    }

    @Override
    public Field<String> field5() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.REPORT_TYPE;
    }

    @Override
    public Field<String> field6() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.EXECUTE_TYPE;
    }

    @Override
    public Field<String> field7() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.EXECUTE_PARAM;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.EXECUTE_FUTURE_TIME;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.EXECUTE_TIME;
    }

    @Override
    public Field<Integer> field10() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.RULE_IDS;
    }

    @Override
    public Field<Integer> field11() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.REPORT_ID;
    }

    @Override
    public Field<String> field12() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.CREATED_TIME;
    }

    @Override
    public Field<String> field14() {
        return TaskPipelineInfo.TASK_PIPELINE_INFO.STATUS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAccessToken();
    }

    @Override
    public String component3() {
        return getExecuteClusterId();
    }

    @Override
    public String component4() {
        return getExecuteNodeId();
    }

    @Override
    public String component5() {
        return getReportType();
    }

    @Override
    public String component6() {
        return getExecuteType();
    }

    @Override
    public String component7() {
        return getExecuteParam();
    }

    @Override
    public LocalDateTime component8() {
        return getExecuteFutureTime();
    }

    @Override
    public LocalDateTime component9() {
        return getExecuteTime();
    }

    @Override
    public Integer component10() {
        return getRuleIds();
    }

    @Override
    public Integer component11() {
        return getReportId();
    }

    @Override
    public String component12() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component13() {
        return getCreatedTime();
    }

    @Override
    public String component14() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAccessToken();
    }

    @Override
    public String value3() {
        return getExecuteClusterId();
    }

    @Override
    public String value4() {
        return getExecuteNodeId();
    }

    @Override
    public String value5() {
        return getReportType();
    }

    @Override
    public String value6() {
        return getExecuteType();
    }

    @Override
    public String value7() {
        return getExecuteParam();
    }

    @Override
    public LocalDateTime value8() {
        return getExecuteFutureTime();
    }

    @Override
    public LocalDateTime value9() {
        return getExecuteTime();
    }

    @Override
    public Integer value10() {
        return getRuleIds();
    }

    @Override
    public Integer value11() {
        return getReportId();
    }

    @Override
    public String value12() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value13() {
        return getCreatedTime();
    }

    @Override
    public String value14() {
        return getStatus();
    }

    @Override
    public TaskPipelineInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value2(String value) {
        setAccessToken(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value3(String value) {
        setExecuteClusterId(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value4(String value) {
        setExecuteNodeId(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value5(String value) {
        setReportType(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value6(String value) {
        setExecuteType(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value7(String value) {
        setExecuteParam(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value8(LocalDateTime value) {
        setExecuteFutureTime(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value9(LocalDateTime value) {
        setExecuteTime(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value10(Integer value) {
        setRuleIds(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value11(Integer value) {
        setReportId(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value12(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value13(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord value14(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TaskPipelineInfoRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, LocalDateTime value8, LocalDateTime value9, Integer value10, Integer value11, String value12, LocalDateTime value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskPipelineInfoRecord
     */
    public TaskPipelineInfoRecord() {
        super(TaskPipelineInfo.TASK_PIPELINE_INFO);
    }

    /**
     * Create a detached, initialised TaskPipelineInfoRecord
     */
    public TaskPipelineInfoRecord(Integer id, String accessToken, String executeClusterId, String executeNodeId, String reportType, String executeType, String executeParam, LocalDateTime executeFutureTime, LocalDateTime executeTime, Integer ruleIds, Integer reportId, String createdBy, LocalDateTime createdTime, String status) {
        super(TaskPipelineInfo.TASK_PIPELINE_INFO);

        setId(id);
        setAccessToken(accessToken);
        setExecuteClusterId(executeClusterId);
        setExecuteNodeId(executeNodeId);
        setReportType(reportType);
        setExecuteType(executeType);
        setExecuteParam(executeParam);
        setExecuteFutureTime(executeFutureTime);
        setExecuteTime(executeTime);
        setRuleIds(ruleIds);
        setReportId(reportId);
        setCreatedBy(createdBy);
        setCreatedTime(createdTime);
        setStatus(status);
    }
}
