/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Keys;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.HelpInfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HelpInfo extends TableImpl<HelpInfoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>TMAESTRO-LITE.HELP_INFO</code>
     */
    public static final HelpInfo HELP_INFO = new HelpInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HelpInfoRecord> getRecordType() {
        return HelpInfoRecord.class;
    }

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.ID</code>. 主键ID
     */
    public final TableField<HelpInfoRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.STEP</code>. 当前步骤
     */
    public final TableField<HelpInfoRecord, Integer> STEP = createField(DSL.name("STEP"), SQLDataType.INTEGER.nullable(false), this, "当前步骤");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.STEP_TITLE</code>. 步骤标题
     */
    public final TableField<HelpInfoRecord, String> STEP_TITLE = createField(DSL.name("STEP_TITLE"), SQLDataType.VARCHAR(255).nullable(false), this, "步骤标题");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.STEP_SHOW_MESSAGE</code>. 展示内容
     */
    public final TableField<HelpInfoRecord, String> STEP_SHOW_MESSAGE = createField(DSL.name("STEP_SHOW_MESSAGE"), SQLDataType.VARCHAR(900).nullable(false), this, "展示内容");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.STEP_TAG</code>. 步骤标签
     */
    public final TableField<HelpInfoRecord, String> STEP_TAG = createField(DSL.name("STEP_TAG"), SQLDataType.VARCHAR(32), this, "步骤标签");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.CREATED_BY</code>. 创建人
     */
    public final TableField<HelpInfoRecord, String> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.VARCHAR(255).nullable(false), this, "创建人");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.CREATED_TIME</code>. 创建时间
     */
    public final TableField<HelpInfoRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("CREATED_TIME"), SQLDataType.LOCALDATETIME(6), this, "创建时间");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.UPDATED_BY</code>. 更新人
     */
    public final TableField<HelpInfoRecord, String> UPDATED_BY = createField(DSL.name("UPDATED_BY"), SQLDataType.VARCHAR(255), this, "更新人");

    /**
     * The column <code>TMAESTRO-LITE.HELP_INFO.UPDATED_TIME</code>. 更新时间
     */
    public final TableField<HelpInfoRecord, LocalDateTime> UPDATED_TIME = createField(DSL.name("UPDATED_TIME"), SQLDataType.LOCALDATETIME(6), this, "更新时间");

    private HelpInfo(Name alias, Table<HelpInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private HelpInfo(Name alias, Table<HelpInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.HELP_INFO</code> table reference
     */
    public HelpInfo(String alias) {
        this(DSL.name(alias), HELP_INFO);
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.HELP_INFO</code> table reference
     */
    public HelpInfo(Name alias) {
        this(alias, HELP_INFO);
    }

    /**
     * Create a <code>TMAESTRO-LITE.HELP_INFO</code> table reference
     */
    public HelpInfo() {
        this(DSL.name("HELP_INFO"), null);
    }

    public <O extends Record> HelpInfo(Table<O> child, ForeignKey<O, HelpInfoRecord> key) {
        super(child, key, HELP_INFO);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public Identity<HelpInfoRecord, Integer> getIdentity() {
        return (Identity<HelpInfoRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<HelpInfoRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F5;
    }

    @Override
    public List<UniqueKey<HelpInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<HelpInfoRecord>>asList(Keys.CONSTRAINT_F5);
    }

    @Override
    public HelpInfo as(String alias) {
        return new HelpInfo(DSL.name(alias), this);
    }

    @Override
    public HelpInfo as(Name alias) {
        return new HelpInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HelpInfo rename(String name) {
        return new HelpInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HelpInfo rename(Name name) {
        return new HelpInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
