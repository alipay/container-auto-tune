/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Keys;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.JvmTuningRiskCenterRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JvmTuningRiskCenter extends TableImpl<JvmTuningRiskCenterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER</code>
     */
    public static final JvmTuningRiskCenter JVM_TUNING_RISK_CENTER = new JvmTuningRiskCenter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JvmTuningRiskCenterRecord> getRecordType() {
        return JvmTuningRiskCenterRecord.class;
    }

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.ID</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, Long> ID = createField(DSL.name("ID"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.APPID</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, Integer> APPID = createField(DSL.name("APPID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.APP</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, String> APP = createField(DSL.name("APP"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.METRIC</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, String> METRIC = createField(DSL.name("METRIC"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.MODEL</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, String> MODEL = createField(DSL.name("MODEL"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.DT</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, String> DT = createField(DSL.name("DT"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.SUCESS</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, String> SUCESS = createField(DSL.name("SUCESS"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.INFO</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, String> INFO = createField(DSL.name("INFO"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.LOWLINE</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, Double> LOWLINE = createField(DSL.name("LOWLINE"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.UPLINE</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, Double> UPLINE = createField(DSL.name("UPLINE"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER.TIMESTAMP</code>.
     */
    public final TableField<JvmTuningRiskCenterRecord, LocalDateTime> TIMESTAMP = createField(DSL.name("TIMESTAMP"), SQLDataType.LOCALDATETIME(6), this, "");

    private JvmTuningRiskCenter(Name alias, Table<JvmTuningRiskCenterRecord> aliased) {
        this(alias, aliased, null);
    }

    private JvmTuningRiskCenter(Name alias, Table<JvmTuningRiskCenterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER</code> table reference
     */
    public JvmTuningRiskCenter(String alias) {
        this(DSL.name(alias), JVM_TUNING_RISK_CENTER);
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER</code> table reference
     */
    public JvmTuningRiskCenter(Name alias) {
        this(alias, JVM_TUNING_RISK_CENTER);
    }

    /**
     * Create a <code>TMAESTRO-LITE.JVM_TUNING_RISK_CENTER</code> table reference
     */
    public JvmTuningRiskCenter() {
        this(DSL.name("JVM_TUNING_RISK_CENTER"), null);
    }

    public <O extends Record> JvmTuningRiskCenter(Table<O> child, ForeignKey<O, JvmTuningRiskCenterRecord> key) {
        super(child, key, JVM_TUNING_RISK_CENTER);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public Identity<JvmTuningRiskCenterRecord, Long> getIdentity() {
        return (Identity<JvmTuningRiskCenterRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<JvmTuningRiskCenterRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_84;
    }

    @Override
    public List<UniqueKey<JvmTuningRiskCenterRecord>> getKeys() {
        return Arrays.<UniqueKey<JvmTuningRiskCenterRecord>>asList(Keys.CONSTRAINT_84, Keys.JVM_TUNING_RISK_CENTER_APPID_METRIC_DT_UINDEX);
    }

    @Override
    public JvmTuningRiskCenter as(String alias) {
        return new JvmTuningRiskCenter(DSL.name(alias), this);
    }

    @Override
    public JvmTuningRiskCenter as(Name alias) {
        return new JvmTuningRiskCenter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JvmTuningRiskCenter rename(String name) {
        return new JvmTuningRiskCenter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JvmTuningRiskCenter rename(Name name) {
        return new JvmTuningRiskCenter(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Integer, String, String, String, String, String, String, Double, Double, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
