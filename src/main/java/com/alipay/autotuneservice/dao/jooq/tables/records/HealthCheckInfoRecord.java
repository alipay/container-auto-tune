/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.HealthCheckInfo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HealthCheckInfoRecord extends UpdatableRecordImpl<HealthCheckInfoRecord> implements Record10<Integer, String, Integer, String, LocalDateTime, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ID</code>. 主键ID
     */
    public HealthCheckInfoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ID</code>. 主键ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public HealthCheckInfoRecord setAccessToken(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ACCESS_TOKEN</code>. 关联的token
     */
    public String getAccessToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.APP_ID</code>. 关联的集群id
     */
    public HealthCheckInfoRecord setAppId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.APP_ID</code>. 关联的集群id
     */
    public Integer getAppId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.CREATED_BY</code>. 创建人
     */
    public HealthCheckInfoRecord setCreatedBy(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.CREATED_BY</code>. 创建人
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.CREATED_TIME</code>. 创建时间
     */
    public HealthCheckInfoRecord setCreatedTime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.STATUS</code>. 状态:检查成功、检查失败
     */
    public HealthCheckInfoRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.STATUS</code>. 状态:检查成功、检查失败
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.PROBLEAM_POINT</code>. 检查问题点
     */
    public HealthCheckInfoRecord setProbleamPoint(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.PROBLEAM_POINT</code>. 检查问题点
     */
    public String getProbleamPoint() {
        return (String) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.GRADE</code>. 分数
     */
    public HealthCheckInfoRecord setGrade(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.GRADE</code>. 分数
     */
    public String getGrade() {
        return (String) get(7);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ENCHANGE_POINT</code>. 改变的点
     */
    public HealthCheckInfoRecord setEnchangePoint(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ENCHANGE_POINT</code>. 改变的点
     */
    public String getEnchangePoint() {
        return (String) get(8);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ALGO_PROBLEAM</code>.
     */
    public HealthCheckInfoRecord setAlgoProbleam(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.HEALTH_CHECK_INFO.ALGO_PROBLEAM</code>.
     */
    public String getAlgoProbleam() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, Integer, String, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, Integer, String, LocalDateTime, String, String, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.ID;
    }

    @Override
    public Field<String> field2() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.ACCESS_TOKEN;
    }

    @Override
    public Field<Integer> field3() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.APP_ID;
    }

    @Override
    public Field<String> field4() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.CREATED_TIME;
    }

    @Override
    public Field<String> field6() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.STATUS;
    }

    @Override
    public Field<String> field7() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.PROBLEAM_POINT;
    }

    @Override
    public Field<String> field8() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.GRADE;
    }

    @Override
    public Field<String> field9() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.ENCHANGE_POINT;
    }

    @Override
    public Field<String> field10() {
        return HealthCheckInfo.HEALTH_CHECK_INFO.ALGO_PROBLEAM;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAccessToken();
    }

    @Override
    public Integer component3() {
        return getAppId();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedTime();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public String component7() {
        return getProbleamPoint();
    }

    @Override
    public String component8() {
        return getGrade();
    }

    @Override
    public String component9() {
        return getEnchangePoint();
    }

    @Override
    public String component10() {
        return getAlgoProbleam();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAccessToken();
    }

    @Override
    public Integer value3() {
        return getAppId();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedTime();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public String value7() {
        return getProbleamPoint();
    }

    @Override
    public String value8() {
        return getGrade();
    }

    @Override
    public String value9() {
        return getEnchangePoint();
    }

    @Override
    public String value10() {
        return getAlgoProbleam();
    }

    @Override
    public HealthCheckInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value2(String value) {
        setAccessToken(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value3(Integer value) {
        setAppId(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value5(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value7(String value) {
        setProbleamPoint(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value8(String value) {
        setGrade(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value9(String value) {
        setEnchangePoint(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord value10(String value) {
        setAlgoProbleam(value);
        return this;
    }

    @Override
    public HealthCheckInfoRecord values(Integer value1, String value2, Integer value3, String value4, LocalDateTime value5, String value6, String value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HealthCheckInfoRecord
     */
    public HealthCheckInfoRecord() {
        super(HealthCheckInfo.HEALTH_CHECK_INFO);
    }

    /**
     * Create a detached, initialised HealthCheckInfoRecord
     */
    public HealthCheckInfoRecord(Integer id, String accessToken, Integer appId, String createdBy, LocalDateTime createdTime, String status, String probleamPoint, String grade, String enchangePoint, String algoProbleam) {
        super(HealthCheckInfo.HEALTH_CHECK_INFO);

        setId(id);
        setAccessToken(accessToken);
        setAppId(appId);
        setCreatedBy(createdBy);
        setCreatedTime(createdTime);
        setStatus(status);
        setProbleamPoint(probleamPoint);
        setGrade(grade);
        setEnchangePoint(enchangePoint);
        setAlgoProbleam(algoProbleam);
    }
}
