/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.Lock;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LockRecord extends UpdatableRecordImpl<LockRecord> implements Record4<Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.LOCK.ID</code>.
     */
    public LockRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.LOCK.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.LOCK.LOCK_NAME</code>.
     */
    public LockRecord setLockName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.LOCK.LOCK_NAME</code>.
     */
    public String getLockName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.LOCK.CREATED_TIME</code>.
     */
    public LockRecord setCreatedTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.LOCK.CREATED_TIME</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.LOCK.UPDATED_TIME</code>.
     */
    public LockRecord setUpdatedTime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.LOCK.UPDATED_TIME</code>.
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Lock.LOCK.ID;
    }

    @Override
    public Field<String> field2() {
        return Lock.LOCK.LOCK_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Lock.LOCK.CREATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Lock.LOCK.UPDATED_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLockName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLockName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedTime();
    }

    @Override
    public LockRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public LockRecord value2(String value) {
        setLockName(value);
        return this;
    }

    @Override
    public LockRecord value3(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public LockRecord value4(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public LockRecord values(Integer value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LockRecord
     */
    public LockRecord() {
        super(Lock.LOCK);
    }

    /**
     * Create a detached, initialised LockRecord
     */
    public LockRecord(Integer id, String lockName, LocalDateTime createdTime, LocalDateTime updatedTime) {
        super(Lock.LOCK);

        setId(id);
        setLockName(lockName);
        setCreatedTime(createdTime);
        setUpdatedTime(updatedTime);
    }
}
