/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.ExpertKnowledge;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpertKnowledgeRecord extends UpdatableRecordImpl<ExpertKnowledgeRecord> implements Record9<Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.ID</code>.
     */
    public ExpertKnowledgeRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.GARBAGE_COLLECTOR</code>. 垃圾回收器种类
     */
    public ExpertKnowledgeRecord setGarbageCollector(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.GARBAGE_COLLECTOR</code>. 垃圾回收器种类
     */
    public String getGarbageCollector() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.JDK_VERSION</code>. jdk版本
     */
    public ExpertKnowledgeRecord setJdkVersion(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.JDK_VERSION</code>. jdk版本
     */
    public String getJdkVersion() {
        return (String) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.DESC</code>. 问题描述
     */
    public ExpertKnowledgeRecord setDesc(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.DESC</code>. 问题描述
     */
    public String getDesc() {
        return (String) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.PROBLEM_TYPE_SET</code>. 问题类型集合
     */
    public ExpertKnowledgeRecord setProblemTypeSet(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.PROBLEM_TYPE_SET</code>. 问题类型集合
     */
    public String getProblemTypeSet() {
        return (String) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.EXPERT_JVM_PLANS</code>. 调整方案
     */
    public ExpertKnowledgeRecord setExpertJvmPlans(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.EXPERT_JVM_PLANS</code>. 调整方案
     */
    public String getExpertJvmPlans() {
        return (String) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.CREATED_TIME</code>. 创建时间
     */
    public ExpertKnowledgeRecord setCreatedTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.CREATED_TIME</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.CREATED_BY</code>. 创建人
     */
    public ExpertKnowledgeRecord setCreatedBy(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.CREATED_BY</code>. 创建人
     */
    public String getCreatedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.UPDATED_TIME</code>. 更新时间
     */
    public ExpertKnowledgeRecord setUpdatedTime(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.EXPERT_KNOWLEDGE.UPDATED_TIME</code>. 更新时间
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.ID;
    }

    @Override
    public Field<String> field2() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.GARBAGE_COLLECTOR;
    }

    @Override
    public Field<String> field3() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.JDK_VERSION;
    }

    @Override
    public Field<String> field4() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.DESC;
    }

    @Override
    public Field<String> field5() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.PROBLEM_TYPE_SET;
    }

    @Override
    public Field<String> field6() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.EXPERT_JVM_PLANS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.CREATED_TIME;
    }

    @Override
    public Field<String> field8() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return ExpertKnowledge.EXPERT_KNOWLEDGE.UPDATED_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getGarbageCollector();
    }

    @Override
    public String component3() {
        return getJdkVersion();
    }

    @Override
    public String component4() {
        return getDesc();
    }

    @Override
    public String component5() {
        return getProblemTypeSet();
    }

    @Override
    public String component6() {
        return getExpertJvmPlans();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedTime();
    }

    @Override
    public String component8() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdatedTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getGarbageCollector();
    }

    @Override
    public String value3() {
        return getJdkVersion();
    }

    @Override
    public String value4() {
        return getDesc();
    }

    @Override
    public String value5() {
        return getProblemTypeSet();
    }

    @Override
    public String value6() {
        return getExpertJvmPlans();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedTime();
    }

    @Override
    public String value8() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdatedTime();
    }

    @Override
    public ExpertKnowledgeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value2(String value) {
        setGarbageCollector(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value3(String value) {
        setJdkVersion(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value4(String value) {
        setDesc(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value5(String value) {
        setProblemTypeSet(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value6(String value) {
        setExpertJvmPlans(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value7(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value8(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord value9(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public ExpertKnowledgeRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7, String value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExpertKnowledgeRecord
     */
    public ExpertKnowledgeRecord() {
        super(ExpertKnowledge.EXPERT_KNOWLEDGE);
    }

    /**
     * Create a detached, initialised ExpertKnowledgeRecord
     */
    public ExpertKnowledgeRecord(Integer id, String garbageCollector, String jdkVersion, String desc, String problemTypeSet, String expertJvmPlans, LocalDateTime createdTime, String createdBy, LocalDateTime updatedTime) {
        super(ExpertKnowledge.EXPERT_KNOWLEDGE);

        setId(id);
        setGarbageCollector(garbageCollector);
        setJdkVersion(jdkVersion);
        setDesc(desc);
        setProblemTypeSet(problemTypeSet);
        setExpertJvmPlans(expertJvmPlans);
        setCreatedTime(createdTime);
        setCreatedBy(createdBy);
        setUpdatedTime(updatedTime);
    }
}
