/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Keys;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.AlarmRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Alarm extends TableImpl<AlarmRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>TMAESTRO-LITE.ALARM</code>
     */
    public static final Alarm ALARM = new Alarm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AlarmRecord> getRecordType() {
        return AlarmRecord.class;
    }

    /**
     * The column <code>TMAESTRO-LITE.ALARM.ID</code>.
     */
    public final TableField<AlarmRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.ALARM_NAME</code>.
     */
    public final TableField<AlarmRecord, String> ALARM_NAME = createField(DSL.name("ALARM_NAME"), SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.APP_NAME</code>.
     */
    public final TableField<AlarmRecord, String> APP_NAME = createField(DSL.name("APP_NAME"), SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.APP_ID</code>.
     */
    public final TableField<AlarmRecord, Integer> APP_ID = createField(DSL.name("APP_ID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.STATUS</code>.
     */
    public final TableField<AlarmRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.ALARM_RULE</code>.
     */
    public final TableField<AlarmRecord, String> ALARM_RULE = createField(DSL.name("ALARM_RULE"), SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.RULE_ACTION</code>.
     */
    public final TableField<AlarmRecord, String> RULE_ACTION = createField(DSL.name("RULE_ACTION"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.ALARM_NOTICE</code>.
     */
    public final TableField<AlarmRecord, String> ALARM_NOTICE = createField(DSL.name("ALARM_NOTICE"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.CREATE_BY</code>.
     */
    public final TableField<AlarmRecord, String> CREATE_BY = createField(DSL.name("CREATE_BY"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.CONTEXT</code>.
     */
    public final TableField<AlarmRecord, String> CONTEXT = createField(DSL.name("CONTEXT"), SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.CREATED_TIME</code>.
     */
    public final TableField<AlarmRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("CREATED_TIME"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.UPDATED_TIME</code>.
     */
    public final TableField<AlarmRecord, LocalDateTime> UPDATED_TIME = createField(DSL.name("UPDATED_TIME"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.COMBINATION_TYPE</code>.
     */
    public final TableField<AlarmRecord, String> COMBINATION_TYPE = createField(DSL.name("COMBINATION_TYPE"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>TMAESTRO-LITE.ALARM.ACCESS_TOKEN</code>.
     */
    public final TableField<AlarmRecord, String> ACCESS_TOKEN = createField(DSL.name("ACCESS_TOKEN"), SQLDataType.VARCHAR(125), this, "");

    private Alarm(Name alias, Table<AlarmRecord> aliased) {
        this(alias, aliased, null);
    }

    private Alarm(Name alias, Table<AlarmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.ALARM</code> table reference
     */
    public Alarm(String alias) {
        this(DSL.name(alias), ALARM);
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.ALARM</code> table reference
     */
    public Alarm(Name alias) {
        this(alias, ALARM);
    }

    /**
     * Create a <code>TMAESTRO-LITE.ALARM</code> table reference
     */
    public Alarm() {
        this(DSL.name("ALARM"), null);
    }

    public <O extends Record> Alarm(Table<O> child, ForeignKey<O, AlarmRecord> key) {
        super(child, key, ALARM);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public Identity<AlarmRecord, Integer> getIdentity() {
        return (Identity<AlarmRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<AlarmRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3;
    }

    @Override
    public List<UniqueKey<AlarmRecord>> getKeys() {
        return Arrays.<UniqueKey<AlarmRecord>>asList(Keys.CONSTRAINT_3);
    }

    @Override
    public Alarm as(String alias) {
        return new Alarm(DSL.name(alias), this);
    }

    @Override
    public Alarm as(Name alias) {
        return new Alarm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Alarm rename(String name) {
        return new Alarm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Alarm rename(Name name) {
        return new Alarm(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
