/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiskCheckTask implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       id;
    private Integer       jobId;
    private LocalDateTime executeTime;
    private String        executeParam;
    private String        taskStatus;
    private String        taskResult;
    private String        taskTraceId;
    private String        taskRiskMsg;
    private LocalDateTime createTime;

    public RiskCheckTask() {}

    public RiskCheckTask(RiskCheckTask value) {
        this.id = value.id;
        this.jobId = value.jobId;
        this.executeTime = value.executeTime;
        this.executeParam = value.executeParam;
        this.taskStatus = value.taskStatus;
        this.taskResult = value.taskResult;
        this.taskTraceId = value.taskTraceId;
        this.taskRiskMsg = value.taskRiskMsg;
        this.createTime = value.createTime;
    }

    public RiskCheckTask(
        Integer       id,
        Integer       jobId,
        LocalDateTime executeTime,
        String        executeParam,
        String        taskStatus,
        String        taskResult,
        String        taskTraceId,
        String        taskRiskMsg,
        LocalDateTime createTime
    ) {
        this.id = id;
        this.jobId = jobId;
        this.executeTime = executeTime;
        this.executeParam = executeParam;
        this.taskStatus = taskStatus;
        this.taskResult = taskResult;
        this.taskTraceId = taskTraceId;
        this.taskRiskMsg = taskRiskMsg;
        this.createTime = createTime;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.ID</code>. 主键ID
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.ID</code>. 主键ID
     */
    public RiskCheckTask setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.JOB_ID</code>. 对应risk_check_controller的主键
     */
    public Integer getJobId() {
        return this.jobId;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.JOB_ID</code>. 对应risk_check_controller的主键
     */
    public RiskCheckTask setJobId(Integer jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.EXECUTE_TIME</code>. 任务执行时间
     */
    public LocalDateTime getExecuteTime() {
        return this.executeTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.EXECUTE_TIME</code>. 任务执行时间
     */
    public RiskCheckTask setExecuteTime(LocalDateTime executeTime) {
        this.executeTime = executeTime;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.EXECUTE_PARAM</code>. 任务ID列表
     */
    public String getExecuteParam() {
        return this.executeParam;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.EXECUTE_PARAM</code>. 任务ID列表
     */
    public RiskCheckTask setExecuteParam(String executeParam) {
        this.executeParam = executeParam;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_STATUS</code>. 任务执行状态(READY,INTERUPTE,END)
     */
    public String getTaskStatus() {
        return this.taskStatus;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_STATUS</code>. 任务执行状态(READY,INTERUPTE,END)
     */
    public RiskCheckTask setTaskStatus(String taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_RESULT</code>. 任务检查结果
     */
    public String getTaskResult() {
        return this.taskResult;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_RESULT</code>. 任务检查结果
     */
    public RiskCheckTask setTaskResult(String taskResult) {
        this.taskResult = taskResult;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_TRACE_ID</code>. 任务唯一标识
     */
    public String getTaskTraceId() {
        return this.taskTraceId;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_TRACE_ID</code>. 任务唯一标识
     */
    public RiskCheckTask setTaskTraceId(String taskTraceId) {
        this.taskTraceId = taskTraceId;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_RISK_MSG</code>. 风险详情
     */
    public String getTaskRiskMsg() {
        return this.taskRiskMsg;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.TASK_RISK_MSG</code>. 风险详情
     */
    public RiskCheckTask setTaskRiskMsg(String taskRiskMsg) {
        this.taskRiskMsg = taskRiskMsg;
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.CREATE_TIME</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>TMAESTRO-LITE.RISK_CHECK_TASK.CREATE_TIME</code>. 创建时间
     */
    public RiskCheckTask setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RiskCheckTask (");

        sb.append(id);
        sb.append(", ").append(jobId);
        sb.append(", ").append(executeTime);
        sb.append(", ").append(executeParam);
        sb.append(", ").append(taskStatus);
        sb.append(", ").append(taskResult);
        sb.append(", ").append(taskTraceId);
        sb.append(", ").append(taskRiskMsg);
        sb.append(", ").append(createTime);

        sb.append(")");
        return sb.toString();
    }
}
